
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// НастройкиПрайсаПоставщика.Параметры.УстановитьЗначениеПараметра("Поставщик", Объект.Ссылка);
	//МестаХранения.Параметры.УстановитьЗначениеПараметра("Поставщик", Объект.Владелец);
	//МестаХранения.Параметры.УстановитьЗначениеПараметра("Договор", Объект.Ссылка);

	МестаХранения.Отбор.Элементы.Очистить();
    ЭлементОтбора = МестаХранения.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Поставщик");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = Объект.Владелец;
	
    ЭлементОтбора = МестаХранения.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Договор");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;


	
	КоррекцияПрайса.Отбор.Элементы.Очистить();
    ЭлементОтбора = КоррекцияПрайса.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Поставщик");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = Объект.Владелец;

    ЭлементОтбора = КоррекцияПрайса.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Договор");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;

	
	ДозаказДоУпаковки.Отбор.Элементы.Очистить();
    ЭлементОтбора = ДозаказДоУпаковки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Поставщик");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = Объект.Владелец;

    ЭлементОтбора = ДозаказДоУпаковки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Договор");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;

	НастройкаВидимостиЭлементовФормы();

КонецПроцедуры

&НаКлиенте
Процедура МестаХраненияПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиМестаХранения", 0.001, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиМестаХранения()

	Элементы.ДозаказДоУпаковки.Доступность = Истина;
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.ДозаказДоУпаковки.Доступность = Ложь;
		Возврат;
	КонецЕсли;
	
	Если Элементы.МестаХранения.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ДозаказДоУпаковки.Отбор.Элементы.Очистить();
    ЭлементОтбора = ДозаказДоУпаковки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Поставщик");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = Объект.Владелец;

    ЭлементОтбора = ДозаказДоУпаковки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Договор");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;

    ЭлементОтбора = ДозаказДоУпаковки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("МестоХранения");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = Элементы.МестаХранения.ТекущиеДанные.МестоХранения;

    ЭлементОтбора = ДозаказДоУпаковки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипПрайса");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = Элементы.МестаХранения.ТекущиеДанные.ТипПрайса;

    ЭлементОтбора = ДозаказДоУпаковки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипПоставки");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = Элементы.МестаХранения.ТекущиеДанные.ТипПоставки;

КонецПроцедуры

&НаКлиенте
Процедура ДозаказДоУпаковкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Элементы.МестаХранения.ТекущиеДанные = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВидДоговораПриИзменении(Элемент)

	НастройкаВидимостиЭлементовФормы();

КонецПроцедуры
&НаСервере
Процедура НастройкаВидимостиЭлементовФормы()

	Если Объект.ВидДоговора = 1 Тогда
		Элементы.ГруппаПоставщик.Видимость = Истина;
		ОбновитьСтрокиНастрйкуЗагрузкиПрайсов();
	Иначе
		Элементы.ГруппаПоставщик.Видимость = Ложь;
	КонецЕсли; 

КонецПроцедуры
&НаСервере
Процедура ОбновитьСтрокиНастрйкуЗагрузкиПрайсов()

	Элементы.НадписьНастрокаЗагрузкиПрайсов.Заголовок = "НЕ настроено";
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Поставщик", Объект.Владелец);
		Запрос.УстановитьПараметр("Договор", Объект.Ссылка);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НастройкиПрайсовПоставщиков.Договор.Наименование КАК Договор
			|ИЗ
			|	РегистрСведений.НастройкиПрайсовПоставщиков КАК НастройкиПрайсовПоставщиков
			|ГДЕ
			|	НастройкиПрайсовПоставщиков.Поставщик = &Поставщик
			|	И НастройкиПрайсовПоставщиков.Договор = &Договор";
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Элементы.НадписьНастрокаЗагрузкиПрайсов.Заголовок = "Изменить";
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКлючЗаписиЗагрузкиПрайсов(стрПараметры)

	Перем Ключ;
	Выборка = РегистрыСведений.НастройкиПрайсовПоставщиков.Выбрать(Новый Структура("Договор", стрПараметры.Договор), "Убыв");
	Если Выборка.Следующий() Тогда
		ДанныеКлюча	= Новый Структура("Поставщик, Договор", стрПараметры.Поставщик, стрПараметры.Договор);
		Ключ	= РегистрыСведений.НастройкиПрайсовПоставщиков.СоздатьКлючЗаписи(ДанныеКлюча);
	Иначе
		Ключ	= РегистрыСведений.НастройкиПрайсовПоставщиков.ПустойКлюч();
	КонецЕсли;
	
	Возврат Ключ;

КонецФункции
&НаКлиенте
Процедура НадписьНастрокаЗагрузкиПрайсовНажатие(Элемент)

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПоказатьПредупреждение(, "Сохраните текущий договор", 20);
		Возврат;
	КонецЕсли; 
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Поставщик", Объект.Владелец);
	ЗначенияЗаполнения.Вставить("Договор", Объект.Ссылка);

	КлючЗаписи = ПолучитьКлючЗаписиЗагрузкиПрайсов(ЗначенияЗаполнения);
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", КлючЗаписи);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);

	ОткрытьФорму("РегистрСведений.НастройкиПрайсовПоставщиков.ФормаЗаписи", ПараметрыФормы);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПересчитатьКорЦенуПрайсаНаСервере(стрПараметров)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Договор", стрПараметров.Договор);
	Запрос.УстановитьПараметр("Поставщик", стрПараметров.Поставщик);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	supplier_price.Поставщик,
		|	supplier_price.Договор,
		|	supplier_price.КодПоставщика,
		|	supplier_price.Товар,
		|	supplier_price.ТипПрайса,
		|	supplier_price.price_corr,
		|	supplier_price.price,
		|	supplier_price.cnt,
		|	supplier_price.expiration,
		|	supplier_price.cnt_pack,
		|	supplier_price.delivery_date,
		|	supplier_price.Производитель,
		|	supplier_price.Наименование
		|ПОМЕСТИТЬ ВТ_Прайс
		|ИЗ
		|	РегистрСведений.supplier_price КАК supplier_price
		|ГДЕ
		|	supplier_price.Поставщик = &Поставщик
		|	И supplier_price.Договор = &Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	pc1.Поставщик,
		|	pc1.Договор,
		|	pc1.МаксЦена КАК Цена_1,
		|	МИНИМУМ(ЕСТЬNULL(pc2.МаксЦена, 999999999)) - 0.01 КАК Цена_2,
		|	pc1.Коэффициент
		|ПОМЕСТИТЬ ВТ_ПроцКорПрайса
		|ИЗ
		|	РегистрСведений.ПроцентКоррекцииПрайса КАК pc1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентКоррекцииПрайса КАК pc2
		|		ПО pc1.Поставщик = pc2.Поставщик
		|			И pc1.Договор = pc2.Договор
		|			И pc1.МаксЦена < pc2.МаксЦена
		|ГДЕ
		|	pc1.Поставщик = &Поставщик
		|	И pc1.Договор = &Договор
		|
		|СГРУППИРОВАТЬ ПО
		|	pc1.Поставщик,
		|	pc1.Договор,
		|	pc1.МаксЦена,
		|	pc1.Коэффициент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Прайс.Поставщик,
		|	ВТ_Прайс.Договор,
		|	ВТ_Прайс.КодПоставщика,
		|	ВТ_Прайс.Товар,
		|	ВТ_Прайс.ТипПрайса,
		|	ВТ_Прайс.price,
		|	ВТ_Прайс.price * ЕСТЬNULL(ВТ_ПроцКорПрайса.Коэффициент, 1) КАК price_corr,
		|	ВТ_Прайс.cnt,
		|	ВТ_Прайс.expiration,
		|	ВТ_Прайс.cnt_pack,
		|	ВТ_Прайс.delivery_date,
		|	ВТ_Прайс.Производитель,
		|	ВТ_Прайс.Наименование
		|ИЗ
		|	ВТ_Прайс КАК ВТ_Прайс
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроцКорПрайса КАК ВТ_ПроцКорПрайса
		|		ПО ВТ_Прайс.Поставщик = ВТ_ПроцКорПрайса.Поставщик
		|			И ВТ_Прайс.Договор = ВТ_ПроцКорПрайса.Договор
		|			И (ВТ_Прайс.price МЕЖДУ ВТ_ПроцКорПрайса.Цена_1 И ВТ_ПроцКорПрайса.Цена_2)";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда

		НаборЗаписей = РегистрыСведений.supplier_price.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Поставщик.Установить(стрПараметров.Поставщик);
		НаборЗаписей.Отбор.Договор.Установить(стрПараметров.Договор);
		НаборЗаписей.Загрузить(РезультатЗапроса.Выгрузить());
		НаборЗаписей.Записать();
		НаборЗаписей = "";

	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКорЦенуПрайса(Команда)

	ПересчитатьКорЦенуПрайсаНаСервере(Новый Структура("Поставщик, Договор", Объект.Владелец, Объект.Ссылка));
	ПоказатьПредупреждение(, "Пересчет окончен", 10);

КонецПроцедуры

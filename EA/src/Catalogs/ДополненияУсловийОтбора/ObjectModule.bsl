

Процедура ПередЗаписью(Отказ)
	
	Если Не ЭтоГруппа Тогда
		
		// если нет ни одной связи, то создадим одну по умолчанию
		Если НастройкаСвязиСОбъектом.Количество() = 0 Тогда
			ДобавитьНастройкуСвязиПоУмолчанию();
		КонецЕсли;
		
		// заполним ТЧ ПоляЗапроса
	    ПерезаполнитьПоляЗапроса();
		
		// если не заполнились поля - значит есть ошибки
		ЕстьОшибки = ( ПоляЗапроса.Количество() = 0 );
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если НастройкаСвязиСОбъектом.Количество() = 0 Тогда
		ДобавитьНастройкуСвязиПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Проверим корректность имени набора данных
	Если Не ЭтоГруппа И Не ПустаяСтрока( ИмяНабораДанных ) Тогда
		
		Если Не ЭтоКорректноеИмя( ИмяНабораДанных ) Тогда
		
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.УстановитьДанные( ЭтотОбъект );
			СообщениеПользователю.Текст = "Имя набора данных не является корректным именем";
			СообщениеПользователю.Сообщить();
			
			Отказ = Истина;
			
		// имена наборов данных не должны пересекаться для одного и того же вида объекта	
		ИначеЕсли ЗначениеЗаполнено( ВидОбъекта ) Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр( "ВидОбъекта", ВидОбъекта );
			Запрос.УстановитьПараметр( "ИмяНабораДанных", ИмяНабораДанных );
			Запрос.УстановитьПараметр( "ЭтотОбъект", ЭтотОбъект.Ссылка );
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ДополненияУсловийОтбора.Ссылка
			|ИЗ
			|	Справочник.ДополненияУсловийОтбора КАК ДополненияУсловийОтбора
			|ГДЕ
			|	ДополненияУсловийОтбора.ВидОбъекта = &ВидОбъекта
			|	И ДополненияУсловийОтбора.ИмяНабораДанных = &ИмяНабораДанных
			|	И ДополненияУсловийОтбора.Ссылка <> &ЭтотОбъект";
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				
				СообщениеПользователю = Новый СообщениеПользователю;
				СообщениеПользователю.УстановитьДанные( ЭтотОбъект );
				СообщениеПользователю.Текст = "Имя набора данных не уникально для выбранного вида объекта";
				СообщениеПользователю.Сообщить();
				
				Отказ = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ПерезаполнитьПоляЗапроса() Экспорт
	
	ПоляЗапроса.Очистить();
	
	Если Не ПустаяСтрока( ТекстЗапроса ) И Не ПустаяСтрока( ИмяНабораДанных ) И ЭтоКорректноеИмя( ИмяНабораДанных ) Тогда
		
		// создадим и заполним схему компоновки данных
		СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;
		
		ИсточникДанных = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
		ИсточникДанных.Имя = "ИсточникДанных_ТекущаяБД";
		ИсточникДанных.ТипИсточникаДанных = "Local";
		
		НаборДанных = СхемаКомпоновкиДанных.НаборыДанных.Добавить( Тип( "НаборДанныхЗапросСхемыКомпоновкиДанных" ) );
		НаборДанных.Имя = "НаборДанных";
		НаборДанных.ИсточникДанных = ИсточникДанных.Имя;
		НаборДанных.АвтоЗаполнениеДоступныхПолей = Истина;
		НаборДанных.Запрос = ТекстЗапроса;
		
		// создадим и заполним компоновщик настроек
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроек.Инициализировать( Новый ИсточникДоступныхНастроекКомпоновкиДанных( СхемаКомпоновкиДанных ) );
		
		// заполним Поля Запроса по отбору компоновщика
		Если КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.Элементы.Количество() > 0 Тогда
			
			// Дальнейшие строки Полей Запроса заполняем из данных отбора
			Для Каждого ЭлементОтбора Из КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.Элементы Цикл
				
				НоваяСтрока = ПоляЗапроса.Добавить();
				
				НоваяСтрока.Поле = Строка( ЭлементОтбора.Поле ); 
				НоваяСтрока.ПутьКДанным = ИмяНабораДанных + "." + НоваяСтрока.Поле;
				НоваяСтрока.Заголовок = Наименование + "." + ЭлементОтбора.Заголовок;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьНастройкуСвязиПоУмолчанию()
	
	НастройкаСвязиПоУмолчанию = НастройкаСвязиСОбъектом.Добавить();
	
	НастройкаСвязиПоУмолчанию.ВыражениеИсточник = "ИСТИНА";
	НастройкаСвязиПоУмолчанию.ВыражениеПриемник = "ИСТИНА";
	
КонецПроцедуры

Функция ЭтоКорректноеИмя( СтрокаИмени ) Экспорт
	
	врСтруктура = Новый Структура;
	
	Попытка
		врСтруктура.Вставить( СтрокаИмени );
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции




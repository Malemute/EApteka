
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭлементОтбора = ПланыКонтракта.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Родитель");
	ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование  = Истина;
	
	УстановитьВидимостьЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НовыеПланыКонтракта.Количество() = 0 И НЕ ЗначениеЗаполнено(Объект.ШкалаБюджета) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Для создания контракта без планов нужно заполнить шкалу бюджета.'"),
				Объект.Ссылка,
				"ШкалаБюджета",
				"Объект",
				Отказ);
			Возврат;
		КонецЕсли;
		
		Для Каждого СтрокаТЧ Из НовыеПланыКонтракта Цикл
			ТекстСообщения = НСтр("ru='В строке %1 не заполнено поле ""%2"".'");
			
			ПредставлениеПоля = "";
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ДатаНачала) Тогда
				ПредставлениеПоля = НСтр("ru='Дата начала'");
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ДатаОкончания) Тогда
				ПредставлениеПоля = НСтр("ru='Дата окончания'");
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ПланКонтракта)
				И (Объект.ТипКонтракта = Перечисления.ТипыКонтрактов.ПоЗакупкамСумма ИЛИ Объект.ТипКонтракта = Перечисления.ТипыКонтрактов.ПоПродажамСумма) Тогда
				ПредставлениеПоля = НСтр("ru='Значение плана'");
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ШкалаБюджета) Тогда
				ПредставлениеПоля = НСтр("ru='Шкала бюджета'");
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ПредставлениеПоля) Тогда
				ТекстСообщения = СтрШаблон(ТекстСообщения, НовыеПланыКонтракта.Индекс(СтрокаТЧ) + 1, ПредставлениеПоля);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Для Каждого СтрокаТЧ Из НовыеПланыКонтракта Цикл
		НовыйКонтракт = Справочники.Контракты.СоздатьЭлемент();
		НовыйКонтракт.Наименование  = СформироватьНаименованиеКонтракта(ТекущийОбъект.Ссылка, СтрокаТЧ.ДатаНачала, СтрокаТЧ.ДатаОкончания);
		НовыйКонтракт.Владелец      = Объект.Владелец;
		НовыйКонтракт.Родитель      = ТекущийОбъект.Ссылка;
		НовыйКонтракт.ТипКонтракта  = Объект.ТипКонтракта;
		НовыйКонтракт.ДатаНачала    = СтрокаТЧ.ДатаНачала;
		НовыйКонтракт.ДатаОкончания = СтрокаТЧ.ДатаОкончания;
		НовыйКонтракт.ПланКонтракта = СтрокаТЧ.ПланКонтракта;
		НовыйКонтракт.ШкалаБюджета  = СтрокаТЧ.ШкалаБюджета;
		НовыйКонтракт.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	НовыеПланыКонтракта.Очистить();
	
	УстановитьВидимостьЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура СформироватьНаименование(Команда)
	
	Объект.Наименование = СформироватьНаименованиеКонтракта(Объект.Родитель, Объект.ДатаНачала, Объект.ДатаОкончания);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТипКонтрактаПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыКонтрактаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Родитель", Объект.Ссылка);
	
	ОткрытьФорму("Справочник.Контракты.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения), ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЭлементовФормы(Форма)
	
	Форма.Элементы.СтраницаНовыйКонтракт.Видимость = НЕ ЗначениеЗаполнено(Форма.Объект.Ссылка);
	Форма.Элементы.СтраницаСуществующийКонтракт.Видимость = ЗначениеЗаполнено(Форма.Объект.Ссылка);
	
	Форма.Элементы.Владелец.Видимость     = НЕ ЗначениеЗаполнено(Форма.Объект.Родитель);
	Форма.Элементы.ТипКонтракта.Видимость = НЕ ЗначениеЗаполнено(Форма.Объект.Родитель);
	Форма.Элементы.Страницы.Видимость     = НЕ ЗначениеЗаполнено(Форма.Объект.Родитель);
	Форма.Элементы.УчитыватьНДС.Видимость = НЕ ЗначениеЗаполнено(Форма.Объект.Родитель);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьНаименованиеКонтракта(Родитель, ДатаНачала, ДатаОкончания)
	
	Если ЗначениеЗаполнено(Родитель) Тогда
		ШаблонНаименования = НСтр("ru='План контракта с %1 по %2'");
	Иначе
		ШаблонНаименования = НСтр("ru='Контракт с %1 по %2'");
	КонецЕсли;
	
	Возврат СтрШаблон(ШаблонНаименования, Формат(ДатаНачала, "ДФ=dd.MM.yyyy"), Формат(ДатаОкончания, "ДФ=dd.MM.yyyy"));
	
КонецФункции

#КонецОбласти

Процедура ОбновитьПравилаОбмена() Экспорт
	
	МассивМетаданных = Новый Массив;
	Для каждого строка из Метаданные.ПланыОбмена.ПланОбменаДанными.Состав цикл
		МассивМетаданных.Добавить(Метаданные);
	КонецЦикла;
	
	ТаблицаМетаданных = Новый ТаблицаЗначений;
	ТаблицаМетаданных.Колонки.Добавить("ТипОбъектаМетаданных",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(30)));
	ТаблицаМетаданных.Колонки.Добавить("ИмяОбъектаМетаданных",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТаблицаМетаданных.Колонки.Добавить("НаправлениеОбмена");
	ТаблицаМетаданных.Колонки.Добавить("НеЗависимыйРегистр");
	ТаблицаМетаданных.Колонки.Добавить("СквознойID");
	
	ТаблицаПодчиненныхМетаданных = Новый ТаблицаЗначений;
	ТаблицаПодчиненныхМетаданных.Колонки.Добавить("ТипОбъектаМетаданных",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(30)));
	ТаблицаПодчиненныхМетаданных.Колонки.Добавить("ИмяОбъектаМетаданных",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТаблицаПодчиненныхМетаданных.Колонки.Добавить("ИмяРеквизита");
	ТаблицаПодчиненныхМетаданных.Колонки.Добавить("СквознойID");
	ТаблицаПодчиненныхМетаданных.Колонки.Добавить("Движение");
	ТаблицаПодчиненныхМетаданных.Колонки.Добавить("ТабличнаяЧасть");
	
	
	ТаблицаСсылок = Новый ТаблицаЗначений;
	ТаблицаСсылок.Колонки.Добавить("ТипОбъектаМетаданных");
	ТаблицаСсылок.Колонки.Добавить("ИмяОбъектаМетаданных");
	ТаблицаСсылок.Колонки.Добавить("Ссылка");
	
	СквознойID = 0;
	СсылкаВсеСправочники = Справочники.ТипВсеСсылки();
	СсылкаВсеДокументы = Документы.ТипВсеСсылки();
	
	Для каждого Справочник из Метаданные.Справочники цикл
		Строка = ТаблицаМетаданных.Добавить();
		Строка.ТипОбъектаМетаданных = "Справочник";
		Строка.ИмяОбъектаМетаданных = Справочник.Имя;
		Строка.НаправлениеОбмена = Перечисления.Обмен_НаправлениеОбмена.ВПодчиненныйУзел;
		Строка.НеЗависимыйРегистр = Ложь;
		Строка.СквознойID = СквознойID;
		Для каждого Реквизит из Справочник.Реквизиты цикл
			МассивТипов = Реквизит.Тип.Типы();
			Для каждого Тип из МассивТипов цикл
				ТипОбъектаМетаданных = "";
				Если СсылкаВсеСправочники.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Справочник";
				ИначеЕсли СсылкаВсеДокументы.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Документ";
				КонецЕсли;
				Если ЗначениеЗаполнено(ТипОбъектаМетаданных) тогда
					ПустаяСсылка = Новый(Тип);
					СтрокаПодчиненныхМетаданных = ТаблицаПодчиненныхМетаданных.Добавить();		
					СтрокаПодчиненныхМетаданных.ТипОбъектаМетаданных = ТипОбъектаМетаданных;
					СтрокаПодчиненныхМетаданных.ИмяОбъектаМетаданных = ПустаяСсылка.Метаданные().Имя;
					СтрокаПодчиненныхМетаданных.ИмяРеквизита = Реквизит.Имя;
					СтрокаПодчиненныхМетаданных.СквознойID = СквознойID;
					СтрокаПодчиненныхМетаданных.Движение = Ложь;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		ТабличнаяЧастьИмя = "";
		Для каждого ТабличнаяЧасть из Справочник.ТабличныеЧасти цикл
			ТабличнаяЧастьИмя = ТабличнаяЧасть.Имя;
			Для каждого Реквизит из ТабличнаяЧасть.Реквизиты цикл
				МассивТипов = Реквизит.Тип.Типы();
				Для каждого Тип из МассивТипов цикл
					ТипОбъектаМетаданных = "";
					Если СсылкаВсеСправочники.СодержитТип(Тип) тогда
						ТипОбъектаМетаданных = "Справочник";
					ИначеЕсли СсылкаВсеДокументы.СодержитТип(Тип) тогда
						ТипОбъектаМетаданных = "Документ";
					КонецЕсли;
					Если ЗначениеЗаполнено(ТипОбъектаМетаданных) тогда
						ПустаяСсылка = Новый(Тип);
						СтрокаПодчиненныхМетаданных = ТаблицаПодчиненныхМетаданных.Добавить();		
						СтрокаПодчиненныхМетаданных.ТабличнаяЧасть = ТабличнаяЧастьИмя;
						СтрокаПодчиненныхМетаданных.ТипОбъектаМетаданных = ТипОбъектаМетаданных;
						СтрокаПодчиненныхМетаданных.ИмяОбъектаМетаданных = ПустаяСсылка.Метаданные().Имя;
						СтрокаПодчиненныхМетаданных.ИмяРеквизита = Реквизит.Имя;
						СтрокаПодчиненныхМетаданных.СквознойID = СквознойID;
						СтрокаПодчиненныхМетаданных.Движение = Ложь;
					КонецЕсли;
				КонецЦикла;		
			КонецЦикла;
		КонецЦикла;
		СквознойID = СквознойID + 1;
	КонецЦикла;
	
	Для каждого Документ из Метаданные.Документы цикл
		Строка = ТаблицаМетаданных.Добавить();
		Строка.ТипОбъектаМетаданных = "Документ";
		Строка.ИмяОбъектаМетаданных = Документ.Имя;	
		Строка.НаправлениеОбмена = Перечисления.Обмен_НаправлениеОбмена.ВЦентральныйУзел;
		Строка.НеЗависимыйРегистр = Ложь;
		Строка.СквознойID = СквознойID;
		Для каждого Реквизит из Документ.Реквизиты цикл
			МассивТипов = Реквизит.Тип.Типы();
			Для каждого Тип из МассивТипов цикл
				ТипОбъектаМетаданных = "";
				Если СсылкаВсеСправочники.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Справочник";
				ИначеЕсли СсылкаВсеДокументы.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Документ";
				КонецЕсли;
				Если ЗначениеЗаполнено(ТипОбъектаМетаданных) тогда
					ПустаяСсылка = Новый(Тип);
					СтрокаПодчиненныхМетаданных = ТаблицаПодчиненныхМетаданных.Добавить();		
					СтрокаПодчиненныхМетаданных.ТипОбъектаМетаданных = ТипОбъектаМетаданных;
					СтрокаПодчиненныхМетаданных.ИмяОбъектаМетаданных = ПустаяСсылка.Метаданные().Имя;
					СтрокаПодчиненныхМетаданных.ИмяРеквизита = Реквизит.Имя;
					СтрокаПодчиненныхМетаданных.СквознойID = СквознойID;
					СтрокаПодчиненныхМетаданных.Движение = Ложь;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		ТабличнаяЧастьИмя = "";
		Для каждого ТабличнаяЧасть из Документ.ТабличныеЧасти цикл
			ТабличнаяЧастьИмя = ТабличнаяЧасть.Имя;
			Для каждого Реквизит из ТабличнаяЧасть.Реквизиты цикл
				МассивТипов = Реквизит.Тип.Типы();
				Для каждого Тип из МассивТипов цикл
					ТипОбъектаМетаданных = "";
					Если СсылкаВсеСправочники.СодержитТип(Тип) тогда
						ТипОбъектаМетаданных = "Справочник";
					ИначеЕсли СсылкаВсеДокументы.СодержитТип(Тип) тогда
						ТипОбъектаМетаданных = "Документ";
					КонецЕсли;
					Если ЗначениеЗаполнено(ТипОбъектаМетаданных) тогда
						ПустаяСсылка = Новый(Тип);
						СтрокаПодчиненныхМетаданных = ТаблицаПодчиненныхМетаданных.Добавить();		
						СтрокаПодчиненныхМетаданных.ТабличнаяЧасть = ТабличнаяЧастьИмя;
						СтрокаПодчиненныхМетаданных.ТипОбъектаМетаданных = ТипОбъектаМетаданных;
						СтрокаПодчиненныхМетаданных.ИмяОбъектаМетаданных = ПустаяСсылка.Метаданные().Имя;
						СтрокаПодчиненныхМетаданных.ИмяРеквизита = Реквизит.Имя;
						СтрокаПодчиненныхМетаданных.СквознойID = СквознойID;
						СтрокаПодчиненныхМетаданных.Движение = Ложь;
					КонецЕсли;
				КонецЦикла;		
			КонецЦикла;
		КонецЦикла;
		Для каждого Движение из Документ.Движения цикл
			ТипОбъектаМетаданных = "";
			Если Метаданные.РегистрыСведений.Содержит(Движение) тогда
				ТипОбъектаМетаданных = "РегистрСведений";
			ИначеЕсли Метаданные.РегистрыНакопления.Содержит(Движение) тогда
				ТипОбъектаМетаданных = "РегистрНакопления";
			КонецЕсли;
			Если ЗначениеЗаполнено(ТипОбъектаМетаданных) тогда
				СтрокаПодчиненныхМетаданных = ТаблицаПодчиненныхМетаданных.Добавить();		
				СтрокаПодчиненныхМетаданных.ТипОбъектаМетаданных = ТипОбъектаМетаданных;
				СтрокаПодчиненныхМетаданных.ИмяОбъектаМетаданных = Движение.Имя;
				СтрокаПодчиненныхМетаданных.ИмяРеквизита = Движение.Имя;
				СтрокаПодчиненныхМетаданных.СквознойID = СквознойID;
				СтрокаПодчиненныхМетаданных.Движение = Истина;
			КонецЕсли;
		КонецЦикла;
		СквознойID = СквознойID + 1;
	КонецЦикла;
	
	Для каждого РегистрСведений из Метаданные.РегистрыСведений цикл
		Строка = ТаблицаМетаданных.Добавить();
		Строка.ТипОбъектаМетаданных = "РегистрСведений";
		Строка.ИмяОбъектаМетаданных = РегистрСведений.Имя;	
		Если РегистрСведений.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору тогда
			Строка.НеЗависимыйРегистр = Ложь;
			Строка.НаправлениеОбмена = Перечисления.Обмен_НаправлениеОбмена.ВЦентральныйУзел;
		Иначе
			Строка.НеЗависимыйРегистр = Истина;
			Строка.НаправлениеОбмена = Перечисления.Обмен_НаправлениеОбмена.ВПодчиненныйУзел;
		КонецЕсли;
		Для каждого Реквизит из РегистрСведений.Реквизиты цикл
			МассивТипов = Реквизит.Тип.Типы();
			Для каждого Тип из МассивТипов цикл
				ТипОбъектаМетаданных = "";
				Если СсылкаВсеСправочники.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Справочник";
				ИначеЕсли СсылкаВсеДокументы.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Документ";
				КонецЕсли;
				Если ЗначениеЗаполнено(ТипОбъектаМетаданных) тогда
					ПустаяСсылка = Новый(Тип);
					СтрокаПодчиненныхМетаданных = ТаблицаПодчиненныхМетаданных.Добавить();		
					СтрокаПодчиненныхМетаданных.ТипОбъектаМетаданных = ТипОбъектаМетаданных;
					СтрокаПодчиненныхМетаданных.ИмяОбъектаМетаданных = ПустаяСсылка.Метаданные().Имя;
					СтрокаПодчиненныхМетаданных.ИмяРеквизита = Реквизит.Имя;
					СтрокаПодчиненныхМетаданных.СквознойID = СквознойID;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Для каждого Измерение из РегистрСведений.Измерения цикл
			МассивТипов = Измерение.Тип.Типы();
			Для каждого Тип из МассивТипов цикл
				ТипОбъектаМетаданных = "";
				Если СсылкаВсеСправочники.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Справочник";
				ИначеЕсли СсылкаВсеДокументы.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Документ";
				КонецЕсли;
				Если ЗначениеЗаполнено(ТипОбъектаМетаданных) тогда
					ПустаяСсылка = Новый(Тип);
					СтрокаПодчиненныхМетаданных = ТаблицаПодчиненныхМетаданных.Добавить();		
					СтрокаПодчиненныхМетаданных.ТипОбъектаМетаданных = ТипОбъектаМетаданных;
					СтрокаПодчиненныхМетаданных.ИмяОбъектаМетаданных = ПустаяСсылка.Метаданные().Имя;
					СтрокаПодчиненныхМетаданных.ИмяРеквизита = Измерение.Имя;
					СтрокаПодчиненныхМетаданных.СквознойID = СквознойID;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Для каждого Ресурс из РегистрСведений.Ресурсы цикл
			МассивТипов = Ресурс.Тип.Типы();
			Для каждого Тип из МассивТипов цикл
				ТипОбъектаМетаданных = "";
				Если СсылкаВсеСправочники.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Справочник";
				ИначеЕсли СсылкаВсеДокументы.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Документ";
				КонецЕсли;
				Если ЗначениеЗаполнено(ТипОбъектаМетаданных) тогда
					ПустаяСсылка = Новый(Тип);
					СтрокаПодчиненныхМетаданных = ТаблицаПодчиненныхМетаданных.Добавить();		
					СтрокаПодчиненныхМетаданных.ТипОбъектаМетаданных = ТипОбъектаМетаданных;
					СтрокаПодчиненныхМетаданных.ИмяОбъектаМетаданных = ПустаяСсылка.Метаданные().Имя;
					СтрокаПодчиненныхМетаданных.ИмяРеквизита = Ресурс.Имя;
					СтрокаПодчиненныхМетаданных.СквознойID = СквознойID;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Строка.СквознойID = СквознойID;
		СквознойID = СквознойID + 1;
	КонецЦикла;
	
	Для каждого РегистрНакопления из Метаданные.РегистрыНакопления цикл
		Строка = ТаблицаМетаданных.Добавить();
		Строка.ТипОбъектаМетаданных = "РегистрНакопления";
		Строка.ИмяОбъектаМетаданных = РегистрНакопления.Имя;
		Строка.НеЗависимыйРегистр = Ложь;
		Строка.НаправлениеОбмена = Перечисления.Обмен_НаправлениеОбмена.ВЦентральныйУзел;
		Для каждого Реквизит из РегистрСведений.Реквизиты цикл
			МассивТипов = Реквизит.Тип.Типы();
			Для каждого Тип из МассивТипов цикл
				ТипОбъектаМетаданных = "";
				Если СсылкаВсеСправочники.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Справочник";
				ИначеЕсли СсылкаВсеДокументы.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Документ";
				КонецЕсли;
				Если ЗначениеЗаполнено(ТипОбъектаМетаданных) тогда
					ПустаяСсылка = Новый(Тип);
					СтрокаПодчиненныхМетаданных = ТаблицаПодчиненныхМетаданных.Добавить();		
					СтрокаПодчиненныхМетаданных.ТипОбъектаМетаданных = ТипОбъектаМетаданных;
					СтрокаПодчиненныхМетаданных.ИмяОбъектаМетаданных = ПустаяСсылка.Метаданные().Имя;
					СтрокаПодчиненныхМетаданных.ИмяРеквизита = Реквизит.Имя;
					СтрокаПодчиненныхМетаданных.СквознойID = СквознойID;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Для каждого Измерение из РегистрСведений.Измерения цикл
			МассивТипов = Измерение.Тип.Типы();
			Для каждого Тип из МассивТипов цикл
				ТипОбъектаМетаданных = "";
				Если СсылкаВсеСправочники.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Справочник";
				ИначеЕсли СсылкаВсеДокументы.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Документ";
				КонецЕсли;
				Если ЗначениеЗаполнено(ТипОбъектаМетаданных) тогда
					ПустаяСсылка = Новый(Тип);
					СтрокаПодчиненныхМетаданных = ТаблицаПодчиненныхМетаданных.Добавить();		
					СтрокаПодчиненныхМетаданных.ТипОбъектаМетаданных = ТипОбъектаМетаданных;
					СтрокаПодчиненныхМетаданных.ИмяОбъектаМетаданных = ПустаяСсылка.Метаданные().Имя;
					СтрокаПодчиненныхМетаданных.ИмяРеквизита = Измерение.Имя;
					СтрокаПодчиненныхМетаданных.СквознойID = СквознойID;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Для каждого Ресурс из РегистрСведений.Ресурсы цикл
			МассивТипов = Ресурс.Тип.Типы();
			Для каждого Тип из МассивТипов цикл
				ТипОбъектаМетаданных = "";
				Если СсылкаВсеСправочники.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Справочник";
				ИначеЕсли СсылкаВсеДокументы.СодержитТип(Тип) тогда
					ТипОбъектаМетаданных = "Документ";
				КонецЕсли;
				Если ЗначениеЗаполнено(ТипОбъектаМетаданных) тогда
					ПустаяСсылка = Новый(Тип);
					СтрокаПодчиненныхМетаданных = ТаблицаПодчиненныхМетаданных.Добавить();		
					СтрокаПодчиненныхМетаданных.ТипОбъектаМетаданных = ТипОбъектаМетаданных;
					СтрокаПодчиненныхМетаданных.ИмяОбъектаМетаданных = ПустаяСсылка.Метаданные().Имя;
					СтрокаПодчиненныхМетаданных.ИмяРеквизита = Ресурс.Имя;
					СтрокаПодчиненныхМетаданных.СквознойID = СквознойID;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Строка.СквознойID = СквознойID;
		СквознойID = СквознойID + 1;
	КонецЦикла;
	
	Для каждого строка из ТаблицаМетаданных цикл
		
		Наименование = Строка.ТипОбъектаМетаданных + "." + Строка.ИмяОбъектаМетаданных; 
		СсылкаНаЭтотОбъект = Справочники.НастройкиОбмена.НайтиПоНаименованию(Наименование);
		
		Если не ЗначениеЗаполнено(СсылкаНаЭтотОбъект) тогда
			НовыйОбъект = Справочники.НастройкиОбмена.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(НовыйОбъект,Строка);		
			НовыйОбъект.Наименование = Строка.ТипОбъектаМетаданных + "." + Строка.ИмяОбъектаМетаданных;
			Строки = ТаблицаСсылок.НайтиСтроки(Новый Структура("ТипОбъектаМетаданных,ИмяОбъектаМетаданных",Строка.ТипОбъектаМетаданных, Строка.ИмяОбъектаМетаданных));
			
			Если Строки.Количество() = 0 тогда
				СтрокаСсылки = ТаблицаСсылок.Добавить();
				СтрокаСсылки.ТипОбъектаМетаданных = Строка.ТипОбъектаМетаданных;
				СтрокаСсылки.ИмяОбъектаМетаданных = Строка.ИмяОбъектаМетаданных;
				СсылкаНаЭтотОбъект = Справочники.НастройкиОбмена.ПолучитьСсылку(Новый УникальныйИдентификатор());
				СтрокаСсылки.Ссылка = СсылкаНаЭтотОбъект;
			Иначе
				Для каждого строкаСсылок из Строки цикл
					СсылкаНаЭтотОбъект = строкаСсылок.Ссылка;
				КонецЦикла;
			КонецЕсли;
			
			ЭтоНовый = Истина;
		Иначе
			НовыйОбъект = СсылкаНаЭтотОбъект.ПолучитьОбъект();
			ЭтоНовый = Ложь;
			Строки = ТаблицаСсылок.НайтиСтроки(Новый Структура("ТипОбъектаМетаданных,ИмяОбъектаМетаданных",Строка.ТипОбъектаМетаданных, Строка.ИмяОбъектаМетаданных));
			
			Если Строки.Количество() = 0 тогда
				СтрокаСсылки = ТаблицаСсылок.Добавить();
				СтрокаСсылки.ТипОбъектаМетаданных = Строка.ТипОбъектаМетаданных;
				СтрокаСсылки.ИмяОбъектаМетаданных = Строка.ИмяОбъектаМетаданных;
				СтрокаСсылки.Ссылка = СсылкаНаЭтотОбъект;
			КонецЕсли;
			
		КонецЕсли;
		
		
		СтрокиПодчиненных = ТаблицаПодчиненныхМетаданных.НайтиСтроки(Новый Структура("СквознойID",Строка.СквознойID));
		
		Для каждого СтрокаПодчиненный из СтрокиПодчиненных цикл
			
			СтрокиСсылок = ТаблицаСсылок.НайтиСтроки(Новый Структура("ТипОбъектаМетаданных,ИмяОбъектаМетаданных",СтрокаПодчиненный.ТипОбъектаМетаданных, СтрокаПодчиненный.ИмяОбъектаМетаданных));
			
			СсылкаНаОбъект = Неопределено;
			
			Для каждого СтрокаСсылки из СтрокиСсылок цикл
				СсылкаНаОбъект = СтрокаСсылки.Ссылка;
			КонецЦикла;
			Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) тогда
				СсылкаНаОбъект = Справочники.НастройкиОбмена.НайтиПоНаименованию(СтрокаПодчиненный.ТипОбъектаМетаданных+"."+СтрокаПодчиненный.ИмяОбъектаМетаданных);
				Если не ЗначениеЗаполнено(СсылкаНаОбъект) тогда
					СсылкаНаОбъект = Справочники.НастройкиОбмена.ПолучитьСсылку(Новый УникальныйИдентификатор());
				КонецЕсли;
				СтрокаСсылка = ТаблицаСсылок.Добавить();
				СтрокаСсылка.ТипОбъектаМетаданных = СтрокаПодчиненный.ТипОбъектаМетаданных;
				СтрокаСсылка.ИмяОбъектаМетаданных = СтрокаПодчиненный.ИмяОбъектаМетаданных;
				СтрокаСсылка.Ссылка     		  = СсылкаНаОбъект;     
			КонецЕсли;
			
			СтрокиП = НовыйОбъект.ПодчиненныеОбъекты.НайтиСтроки(Новый Структура("ИмяРеквизита,ПодчиненныйОбъект",СтрокаПодчиненный.ИмяРеквизита,СсылкаНаОбъект));	
			Если СтрокиП.Количество() = 0 тогда
				СтрокаП = НовыйОбъект.ПодчиненныеОбъекты.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаП,СтрокаПодчиненный);
				СтрокаП.МетитьНаОбмен = СтрокаП.Движение; 
				СтрокаП.ПодчиненныйОбъект 		  = СсылкаНаОбъект; 
			КонецЕсли;
			
			
		КонецЦикла;	
		
		Если ЭтоНовый тогда
			НовыйОбъект.ВключитьВОбмен = Истина;
			НовыйОбъект.УстановитьСсылкуНового(СсылкаНаЭтотОбъект);
		КонецЕсли;
		
		НовыйОбъект.Записать();
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	//Если Источник = "BarCodeScaner" тогда
	//	Если Событие = "BarCodeValue" тогда
	//		Scan.ПосылкаДанных = 1;   
	//		Если ЭтаФорма.ВводДоступен() тогда
	//			ВнешнееСобытиеНаСервере("%"+Строка(Данные)+"%");	
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	
	// ЕМ ********************************************
	// ПодключаемоеОборудование
	Если //Источник = "ПодключаемоеОборудование"
		//И 
		ВводДоступен() Тогда
		//Если Событие = "ScanData" Тогда
		Если Событие = "Штрихкод" Тогда
			ВнешнееСобытиеНаСервере(Данные);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	//******************************************** ЕМ 
	
КонецПроцедуры

&НаСервере
Процедура ВнешнееСобытиеНаСервере(ШК)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаводскиеШК.Владелец
	|ИЗ
	|	Справочник.ЗаводскиеШК КАК ЗаводскиеШК
	|ГДЕ
	|	ЗаводскиеШК.Наименование ПОДОБНО &ШК";
	Запрос.УстановитьПараметр("ШК",ШК);
	Выборка = Запрос.Выполнить().Выбрать();
	МассивНоменклатуры = Новый Массив;
	Пока Выборка.Следующий() цикл
		МассивНоменклатуры.Добавить(Выборка.Владелец);
	КонецЦикла;
	Список.Отбор.Элементы.Очистить();
	Если МассивНоменклатуры.Количество() > 0 тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = МассивНоменклатуры;	
	Иначе
		Сообщить("Товар не найден!");
	КонецЕсли;
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("СписокНоменклатуры",Параметры.СписокНоменклатуры);
	
	ИспользоватьПодключаемоеОборудование = МенеджерОборудованияВызовСервераПереопределяемый.ИспользоватьПодключаемоеОборудование();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(ОповещенияПриПодключении, ЭтотОбъект, "СканерШтрихкода");
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ЗаголовокИнформации = НСтр("ru = 'При подключении оборудования произошла ошибка: '; en = 'An error occurred while connecting the equipment: '");
		ТекстСообщения     = РезультатВыполнения.ОписаниеОшибки;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ЗаголовокИнформации + ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	// ПодключаемоеОборудование
	ОповещенияПриОтключении = Новый ОписаниеОповещения("ОтключитьОборудованиеЗавершение", ЭтотОбъект); 
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(ОповещенияПриОтключении, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
   
   Если Не РезультатВыполнения.Результат Тогда
      ТекстСообщения = НСтр( "ru = 'При отключении оборудования произошла ошибка: ""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   Иначе
      ТекстСообщения = НСтр("ru = 'Оборудование отключено.'" );
      Сообщить(ТекстСообщения);
   КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[ 1 ] = Неопределено Тогда
				ТекКод = Параметр[ 0 ];
			Иначе
				ТекКод = Параметр[ 1 ][ 1 ];
			КонецЕсли;
			Если Не ОбработатьПолученныйШКНаКлиенте(ТекКод) Тогда
				СообщитьОбОшибке(ТекКод)
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция обрабатывает полученный штрихкод от сканера штрихкодов на сервере.
//
&НаСервере
Функция ОбработатьПолученныйШКНаСервере(ТекКод)
	
	КодЭлемента = МенеджерОборудованияВызовСервера.ПоискПоШтрихкоду(ТекКод, Истина);
	Если КодЭлемента.Количество() Тогда
		Результат = КодЭлемента[0].Код;
	Иначе
		Результат = Неопределено;
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

// Функция обрабатывает полученный штрихкод от сканера штрихкодов на клиенте.
//
&НаКлиенте
Функция ОбработатьПолученныйШКНаКлиенте(ТекКод)
	
	Результат = Истина;
	КодЭлемента = ОбработатьПолученныйШКНаСервере(ТекКод);
	Если КодЭлемента <> Неопределено Тогда
		Элемент = НайтиЭлементСправочникаНаСервере(КодЭлемента);
		ПараметрыОткрытия = Новый Структура("Ключ", Элемент);
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента",ПараметрыОткрытия);
	Иначе
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Функция возвращает элемент справочника (СправочникСсылка.Номенклатура).
//
&НаСервере
Функция НайтиЭлементСправочникаНаСервере(КодЭлемента)
	
	Возврат Справочники.Номенклатура.НайтиПоКоду(КодЭлемента);
	
КонецФункции

&НаКлиенте
Процедура СообщитьОбОшибке(ТекКод)
	
	ТекстСообщения = НСтр("ru = 'Позиция номенклатуры не найдена'");
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти



&НаСервере
Процедура ОбновитьПравилаНаСервере()
	
	ТаблицаМетаданных77 = Новый ТаблицаЗначений;
	ТаблицаМетаданных77.Колонки.Добавить("ТипМетаданного");
	ТаблицаМетаданных77.Колонки.Добавить("ИмяМетаданного");
	ТаблицаМетаданных77.Колонки.Добавить("ИмяРеквизита");
	ТаблицаМетаданных77.Колонки.Добавить("СвязанныйТипМетаданных");
	ТаблицаМетаданных77.Колонки.Добавить("СвязанныйТип");
	ТаблицаМетаданных77.Колонки.Добавить("ЗначениеПеречисленияSQL",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(9)));
	ТаблицаМетаданных77.Колонки.Добавить("ТабличнаяЧасть",Новый ОписаниеТипов("Булево"));
	
	БазаОле= Новый COMОбъект("V77.Application"); 
	НастройкаПодключения = Справочники.НастройкиПодключения.Nagat77;
	КаталогБазыОЛе  = """"+НастройкаПодключения.БазаДанных+"""";
	ПользовательОле = """"+НастройкаПодключения.Логин+"""";
	ПарольОле       = """"+НастройкаПодключения.Пароль+"""";;
	МонопольныйРежимOLE ="" ; // для немонопольного запуска указать пустую строку!
	ЗапускБезЗаставки = 0;       // для появления заставки (например, чтобы наблюдать
	// процесс запуска базы OLE визуально) поставьте здесь "0"
	РезультатПодключения = БазаОле.Initialize( БазаОле.RMTrade , "/d" +
	СокрЛП(КаталогБазыОле) + " /n" + СокрЛП(ПользовательОле)+
	" /p" + СокрЛП(ПарольОле) + МонопольныйРежимOLE,
	?(ЗапускБезЗаставки = 1,"NO_SPLASH_SHOW",""));
	Если РезультатПодключения = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось подключится к базе "+КаталогБазыОЛе;
		Сообщение.Сообщить();
		Возврат;
	Иначе
		ОписаниеМетаданных = БазаОле.ЗаполнитьТаблицуМетаданных();
		ОписаниеМетаданных.ВыбратьСтроки();
		Пока ОписаниеМетаданных.ПолучитьСтроку() > 0 Цикл
			НоваяСтрока = ТаблицаМетаданных77.Добавить();
			НоваяСтрока.ТипМетаданного = СокрЛП(ОписаниеМетаданных.ТипМетаданного);
			НоваяСтрока.ИмяМетаданного = СокрЛП(ОписаниеМетаданных.Тип);
			НоваяСтрока.ИмяРеквизита = СокрЛП(ОписаниеМетаданных.Реквизит);
			СвязанныйТип = СокрЛП(ОписаниеМетаданных.СвязанныйТип);
			НомерСимволаРазделителя = стрНайти(СвязанныйТип,".");
			Если НомерСимволаРазделителя <> 0 тогда
				НоваяСтрока.СвязанныйТипМетаданных = Лев(СвязанныйТип,НомерСимволаРазделителя-1);
				НоваяСтрока.СвязанныйТип = СтрЗаменить(СвязанныйТип,НоваяСтрока.СвязанныйТипМетаданных+".","");
			Иначе
				НоваяСтрока.СвязанныйТипМетаданных = СокрЛП(ОписаниеМетаданных.СвязанныйТипМетаданных);
				НоваяСтрока.СвязанныйТип = СокрЛП(ОписаниеМетаданных.СвязанныйТип);
			КонецЕсли;
			НоваяСтрока.ЗначениеПеречисленияSQL = ОписаниеМетаданных.ИД;
			НоваяСтрока.ТабличнаяЧасть = ОписаниеМетаданных.ТабЧасть;
		КонецЦикла;
	КонецЕсли;
	СтрокиМетаданных = ТаблицаМетаданных77.НайтиСтроки(Новый Структура("ИмяРеквизита",""));
	Для Каждого Строка Из СтрокиМетаданных Цикл
		Если ЗначениеЗаполнено(Строка.ИмяРеквизита) тогда
			Продолжить;
		КонецЕсли;
		Объект = ПолучитьЭлементСправочника_Обмен(Строка.ТипМетаданного,Строка.ИмяМетаданного, Строка.ТабличнаяЧасть);
		Если не ЗначениеЗаполнено(Объект) тогда
			Ссылка = Новый("СправочникСсылка.Обмен_ОписаниеОбъектов77");
			Объект = Справочники.Обмен_ОписаниеОбъектов77.СоздатьЭлемент();
			Объект.УстановитьСсылкуНового(Ссылка);
		Иначе
			Ссылка = Объект.Ссылка;
			Объект = Объект.ПолучитьОбъект();
		КонецЕсли;
		Объект.ТипМетаданного = Строка.ТипМетаданного;
		Объект.ИмяМетаданного = Строка.ИмяМетаданного;
		Объект.Наименование = Строка.ТипМетаданного+"."+Строка.ИмяМетаданного;
		Объект.ЭтоПеречисление = Строка.ТипМетаданного = "Перечисление";
		Объект.ТабличнаяЧасть = ?(Строка.ТабличнаяЧасть = 0, Ложь, Истина);
		Если Объект.ТабличнаяЧасть Тогда
			Объект.Наименование = Объект.Наименование + " Табличная часть";
			Объект.ВладелецТабличнойЧасти = ПолучитьЭлементСправочника_Обмен(Объект.ТипМетаданного,Объект.ИмяМетаданного,Ложь); 
		КонецЕсли;
		Объект.Реквизиты.Очистить();
		ОписаниеРеквизитов = ТаблицаМетаданных77.НайтиСтроки(Новый Структура("ТипМетаданного,ИмяМетаданного,ТабличнаяЧасть", Строка.ТипМетаданного, Строка.ИмяМетаданного, Строка.ТабличнаяЧасть));
		Для каждого строка из ОписаниеРеквизитов цикл
			Если НЕ ЗначениеЗаполнено(Строка.ИмяРеквизита) тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрокаРеквизита = Объект.Реквизиты.Добавить();
			НоваяСтрокаРеквизита.ИмяРеквизита = Строка.ИмяРеквизита;
			НоваяСтрокаРеквизита.ТипМетаданных = Строка.СвязанныйТипМетаданных;
			НоваяСтрокаРеквизита.Метаданное = Строка.СвязанныйТип;
			Если не ЗначениеЗаполнено(Строка.СвязанныйТип) тогда
				НоваяСтрокаРеквизита.ПримитивныйТип = Истина;
			КонецЕсли;
			НоваяСтрокаРеквизита.ЗначениеПеречисленияSQL = Строка.ЗначениеПеречисленияSQL;				
			Если Строка.ИмяРеквизита = "Родитель" тогда
				НоваяСтрокаРеквизита.ПримитивныйТип = Ложь;
				НоваяСтрокаРеквизита.СвязанныйТип = Ссылка;
				НоваяСтрокаРеквизита.ТипМетаданных = Объект.ТипМетаданного;
				НоваяСтрокаРеквизита.Метаданное = Объект.ИмяМетаданного;
			КонецЕсли;
			Если строка.СвязанныйТипМетаданных = "Документ" тогда
				НоваяСтрокаРеквизита.ТолькоСсылку = Истина;
			КонецЕсли;
		КонецЦикла;		
		Объект.Записать();
		Объект = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПравила(Команда)
	ОбновитьПравилаНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьЭлементСправочника_Обмен(ТипМетаданного,ИмяМетаданного, ТабличнаяЧасть)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Обмен_ОписаниеОбъектов77.Ссылка
	|ИЗ
	|	Справочник.Обмен_ОписаниеОбъектов77 КАК Обмен_ОписаниеОбъектов77
	|ГДЕ
	|	Обмен_ОписаниеОбъектов77.ТипМетаданного = &ТипМетаданного
	|	И Обмен_ОписаниеОбъектов77.ИмяМетаданного = &ИмяМетаданного
	|	И Обмен_ОписаниеОбъектов77.ТабличнаяЧасть = &ТабличнаяЧасть";
	
	Запрос.УстановитьПараметр("ИмяМетаданного", ИмяМетаданного);
	Запрос.УстановитьПараметр("ТипМетаданного", ТипМетаданного);
	Запрос.УстановитьПараметр("ТабличнаяЧасть", ТабличнаяЧасть);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Возврат Выборка.Ссылка;			
		КонецЦикла;
	КонецЕсли;                     
	
	Возврат Неопределено;	
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеSQLНаСервере()
	
	ТаблицаПарсинга = ПарсингФайлаСловаряБазы77(Константы.ПутьКФайлуDDS.Получить());
	СоответствиеТипов = Новый Соответствие;
	СоответствиеТипов.Вставить("C","Строка");
	СоответствиеТипов.Вставить("S","Строка");
	СоответствиеТипов.Вставить("N","Число");
	СоответствиеТипов.Вставить("D","Дата");
	Для каждого строка из ТаблицаПарсинга цикл
		ОписаниеОбъекта =  ПолучитьЭлементСправочника_Обмен(Строка.ТипМетаданного,Строка.ИмяМетаданного,Строка.ТабличнаяЧасть);
		Если не ЗначениеЗаполнено(ОписаниеОбъекта) тогда
			Продолжить;
		КонецЕсли;
		ОООбъект = ОписаниеОбъекта.ПолучитьОбъект();
		ОООбъект.ИмяSQL = Строка.ИмяSQL;
		Реквизиты = ОООбъект.Реквизиты.Выгрузить();
		Для каждого СтрокаРеквизит из Строка.Реквизиты Цикл 
			Если СтрДлина(СтрокаРеквизит.ИмяРеквизита) = 17 тогда
				НомерСтроки = ПолучитьНомерСтрокиРеквизита(СтрокаРеквизит.ИмяРеквизита,Реквизиты);
				Если НомерСтроки <> Неопределено тогда
					СтрРеквизиты = Реквизиты[НомерСтроки];
				КонецЕсли;
			Иначе
				СтрРеквизиты = Реквизиты.Найти(СтрокаРеквизит.ИмяРеквизита,"ИмяРеквизита");
			КонецЕсли;
			Если СтрРеквизиты = Неопределено Тогда 
				СтрРеквизиты = Реквизиты.Добавить();
				СтрРеквизиты.ИмяРеквизита = СтрокаРеквизит.ИмяРеквизита;
				СтрРеквизиты.ТипМетаданных = СоответствиеТипов.Получить(СтрокаРеквизит.Тип);
				СтрРеквизиты.СлужебныйРеквизит = Истина;
				СтрРеквизиты.ПримитивныйТип = Истина;
			КонецЕсли;
			Если не ЗначениеЗаполнено(СтрРеквизиты.ТипМетаданных) тогда
				СтрРеквизиты.ТипМетаданных = СоответствиеТипов.Получить(СтрокаРеквизит.Тип);
				СтрРеквизиты.ПримитивныйТип = Истина;
			КонецЕсли;
			СтрРеквизиты.ИмяРеквизитаSQL = СтрокаРеквизит.ИмяРеквизитаSQL;
			Если СтрРеквизиты.ПримитивныйТип тогда
				СтрРеквизиты.Длина = СтрокаРеквизит.Длина;
				СтрРеквизиты.Точность = СтрокаРеквизит.Точность;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрРеквизиты.Метаданное)
				//и СтрРеквизиты.ТипМетаданных <> "Перечисление" 
				тогда
				СтрРеквизиты.СвязанныйТип = ПолучитьЭлементСправочника_Обмен(СтрРеквизиты.ТипМетаданных,СтрРеквизиты.Метаданное,Ложь);
			КонецЕсли;	
		КонецЦикла;
		ОООбъект.Реквизиты.Загрузить(Реквизиты);
		ОООбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНомерСтрокиРеквизита(ИмяРеквизита,ТаблицаЗначенийРеквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Реквизиты.ИмяРеквизита,
	               |	Реквизиты.НомерСтроки
	               |ПОМЕСТИТЬ втРеквизиты
	               |ИЗ
	               |	&Реквизиты КАК Реквизиты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втРеквизиты.НомерСтроки
	               |ИЗ
	               |	втРеквизиты КАК втРеквизиты
	               |ГДЕ
	               |	втРеквизиты.ИмяРеквизита ПОДОБНО &ИмяРеквизита";
	Запрос.УстановитьПараметр("ИмяРеквизита", ИмяРеквизита+"%");
	Запрос.УстановитьПараметр("Реквизиты", ТаблицаЗначенийРеквизиты);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.НомерСтроки-1;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ПарсингФайлаСловаряБазы77(ПутьКФайлу)
	
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ПутьКФайлу);
	ТекущаяТаблица = "";
	ТаблицаПарсинга = Новый ТаблицаЗначений;
	ТаблицаПарсинга.Колонки.Добавить("ТипМетаданного");
	ТаблицаПарсинга.Колонки.Добавить("ИмяМетаданного");
	ТаблицаПарсинга.Колонки.Добавить("ИмяSQL");
	ТаблицаПарсинга.Колонки.Добавить("ТабличнаяЧасть", Новый ОписаниеТипов("Булево"));
	ТаблицаПарсинга.Колонки.Добавить("Реквизиты");
	МассивОбрабатываемыхМетаданных = Новый Массив;
	МассивОбрабатываемыхМетаданных.Добавить("Справочник");
	МассивОбрабатываемыхМетаданных.Добавить("Документ");
	Соответствие = ПолучитьСоответствиеСлужебныхРеквизитовSQL_83();
	ФлагЧтения = Ложь;
	
	Для ит = 0 По Текст.КоличествоСтрок() Цикл
		Строка = Текст.ПолучитьСтроку(Ит);
		РабочаяСтрока = СтрЗаменить(Строка,"|",Символы.ПС);
		Если Лев(Строка,8) = "#==TABLE" тогда 
			НомерРазделителя = СтрНайти(РабочаяСтрока,":");
			Имя1с = СокрЛП(Сред(РабочаяСтрока,НомерРазделителя + 1));
			НомерСимволаПробела = стрНайти(Имя1с," ");
			Если НомерСимволаПробела = 0 тогда 
				ФлагЧтения = Ложь;
				Продолжить;
			КонецЕсли;
			ТипМетаданного = Лев(Имя1с,НомерСимволаПробела-1);
			Если МассивОбрабатываемыхМетаданных.Найти(ТипМетаданного) = Неопределено Тогда 
				ФлагЧтения = Ложь;
				Продолжить;
			КонецЕсли;
			ФлагЧтения = Истина;
			ИмяМетаданного = СокрЛП(СтрЗаменить(Имя1с,ТипМетаданного,""));
		ИначеЕсли Лев(Строка, 2) = "T=" и ФлагЧтения Тогда 
			ИмяSQL = СокрЛп(Сред(СтрПолучитьСтроку(РабочаяСтрока,1),3)); 
			ФлагЧтения = Истина;
			СтрокаТаблицы = ТаблицаПарсинга.Добавить();
			СтрокаТаблицы.ТипМетаданного = ТипМетаданного;
			Если СтрНайти(ИмяМетаданного,"(Мн.ч.) ") <> 0 тогда
				СтрокаТаблицы.ТабличнаяЧасть = Истина;
			КонецЕсли;
			СтрокаТаблицы.ИмяМетаданного = СтрЗаменить(ИмяМетаданного,"(Мн.ч.) ","");
			СтрокаТаблицы.ИмяSQL = ИмяSQL;
			СтрокаТаблицы.Реквизиты = ПолучитьТаблицуХраненияРеквитзитов();
		ИначеЕсли Лев(Строка, 2) = "F=" и ФлагЧтения  Тогда 
			СтрокаРеквизит = СтрокаТаблицы.Реквизиты.Добавить();
			СтрокаРеквизит.ИмяРеквизита = СокрЛП(СтрЗаменить(СтрПолучитьСтроку(РабочаяСтрока,2),"(P)",""));
			СтрокаРеквизит.ИмяРеквизитаSQL = СокрЛП(СтрЗаменить(СтрПолучитьСтроку(РабочаяСтрока,1),"F=",""));
			Если Соответствие.Свойство(СтрокаРеквизит.ИмяРеквизитаSQL) тогда
				СтрокаРеквизит.ИмяРеквизита = Соответствие[СтрокаРеквизит.ИмяРеквизитаSQL];
			КонецЕсли;
			СтрокаРеквизит.Тип = СокрЛП(СтрПолучитьСтроку(РабочаяСтрока,3));
			СтрокаРеквизит.Длина = СокрЛП(СтрПолучитьСтроку(РабочаяСтрока,4));
			СтрокаРеквизит.Точность = СокрЛП(СтрПолучитьСтроку(РабочаяСтрока,5));
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаПарсинга;	
	
КонецФункции

&НаСервере
Функция ПолучитьСоответствиеСлужебныхРеквизитовSQL_83()
	
	Соответствие = Новый Структура;
	
	Соответствие.Вставить("CODE","Код");
	Соответствие.Вставить("PARENTEXT","Владелец");
	Соответствие.Вставить("PARENTID","Родитель");
	Соответствие.Вставить("DESCR","Наименование");
	Соответствие.Вставить("ID","ID_77");
	Соответствие.Вставить("ISFOLDER","ЭтоГруппа");
	Соответствие.Вставить("VERSTAMP","Версия");
	Соответствие.Вставить("IDDOC","ID_77");
	Соответствие.Вставить("LINENO_","НомерСтроки");
	Соответствие.Вставить("ISMARK","ПометкаУдаления");
	Соответствие.Вставить("ROW_ID","ИндексноеПоле");
	
	Возврат Соответствие;	
	
КонецФункции

&НаСервере
Функция ПолучитьТаблицуХраненияРеквитзитов()
	
	Таблица = Новый ТаблицаЗначений;
	
	Таблица.Колонки.Добавить("ИмяРеквизита");
	Таблица.Колонки.Добавить("ИмяРеквизитаSQL");
	Таблица.Колонки.Добавить("Тип");
	Таблица.Колонки.Добавить("Длина");
	Таблица.Колонки.Добавить("Точность");
	
	Возврат Таблица;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДанныеSQL(Команда)
	ЗаполнитьДанныеSQLНаСервере();
КонецПроцедуры


Процедура ПередЗаписью(Отказ)
	
	ЭтотОбъект.ИдентификаторТипа = СокрЛП( ВРег( ЭтотОбъект.ИдентификаторТипа ) );
	ЭтотОбъект.ИдентификаторТипаУИД = Справочники.ОписателиТиповИнформационныхБаз.ВычислитьУИДдляИдентификатораТипа( ЭтотОбъект.ИдентификаторТипа );
	
	ПроверитьНаДублированиеИдентификатора( Отказ );
	
КонецПроцедуры

Процедура ПроверитьНаДублированиеИдентификатора( Отказ )
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр( "СсылкаТекущего", ЭтотОбъект.Ссылка );
	Запрос.УстановитьПараметр( "Владелец", ЭтотОбъект.Владелец );
	Запрос.УстановитьПараметр( "ИдентификаторТипа", ЭтотОбъект.ИдентификаторТипа );
	Запрос.УстановитьПараметр( "ИдентификаторТипаУИД", ЭтотОбъект.ИдентификаторТипаУИД );
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОписателиТиповИнформационныхБаз.Ссылка КАК Ссылка,
	|	ОписателиТиповИнформационныхБаз.ИдентификаторТипа КАК ИдентификаторТипа
	|ПОМЕСТИТЬ табНайденныхПоУИД
	|ИЗ
	|	Справочник.ОписателиТиповИнформационныхБаз КАК ОписателиТиповИнформационныхБаз
	|ГДЕ
	|	ОписателиТиповИнформационныхБаз.Владелец = &Владелец
	|	И ОписателиТиповИнформационныхБаз.ИдентификаторТипаУИД = &ИдентификаторТипаУИД
	|	И ОписателиТиповИнформационныхБаз.Ссылка <> &СсылкаТекущего
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	табНайденныхПоУИД.Ссылка КАК Ссылка
	|ИЗ
	|	табНайденныхПоУИД КАК табНайденныхПоУИД
	|ГДЕ
	|	табНайденныхПоУИД.ИдентификаторТипа = &ИдентификаторТипа";
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		СтрокаСообщения = НСтр( "ru = 'Для идентификатора %1 базы %2 уже создан описатель типа. Дублирование идентификаторов не допускается.'" );
		СтрокаСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку( СтрокаСообщения, ЭтотОбъект.ИдентификаторТипа, ЭтотОбъект.Владелец );
		ОбменДаннымиСервер.СообщитьОбОшибке( СтрокаСообщения, Отказ );
	КонецЕсли;
	
КонецПроцедуры

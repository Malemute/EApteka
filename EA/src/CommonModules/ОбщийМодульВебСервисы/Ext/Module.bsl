Функция ПодключитьсяКВебСервису(НастройкаПодключения,ТекстОшибки = неопределено,Таймаут = Неопределено) Экспорт
	
	
	Если ЗначениеЗаполнено(НастройкаПодключения.АдресСервиса) Тогда
		АдресВСДЛ = НастройкаПодключения.АдресСервиса;
	Иначе
		ТекстОшибки = "Не заполнен адрес сервиса";
		Возврат Неопределено;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(НастройкаПодключения.Логин) Тогда
		Логин = НастройкаПодключения.Логин;
	Иначе
		Логин = "";
	КонецЕсли;   
	
	Если ЗначениеЗаполнено(НастройкаПодключения.Пароль) Тогда
		Пароль = НастройкаПодключения.Пароль;
	Иначе
		Пароль = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НастройкаПодключения.ИмяСервиса) Тогда
		ИмяСервиса = НастройкаПодключения.ИмяСервиса;
	Иначе
		ИмяСервиса = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НастройкаПодключения.ПространствоИмен) Тогда
		ПространствоИмен = НастройкаПодключения.ПространствоИмен;
	Иначе
		ПространствоИмен = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НастройкаПодключения.Порт) Тогда
		ТочкаПодключения = НастройкаПодключения.Порт;
	Иначе
		ТочкаПодключения = "";
	КонецЕсли;
	
	Попытка
		
		Если ТипЗнч(Таймаут) = Тип("Число") Тогда
			ВС_Определение = Новый WSОпределения(АдресВСДЛ,Логин,Пароль,,Таймаут);
		Иначе
			ВС_Определение = Новый WSОпределения(АдресВСДЛ,Логин,Пароль,,);
		КонецЕсли;		
		
		Сервис = ВС_Определение.Сервисы[0];
		
		Если Не ЗначениеЗаполнено(ИмяСервиса) Тогда
			ИмяСервиса = Сервис.Имя;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТочкаПодключения) Тогда
			ТочкаПодключения = Сервис.ТочкиПодключения[0].Имя;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ПространствоИмен) Тогда
			ПространствоИмен = Сервис.URIПространстваИмен;
		КонецЕсли;		
		Если ТипЗнч(Таймаут) = Тип("Число") Тогда
			ВС_Прокси = новый WSПрокси(ВС_Определение,ПространствоИмен,ИмяСервиса,ТочкаПодключения,,Таймаут);
		Иначе
			ВС_Прокси = новый WSПрокси(ВС_Определение,ПространствоИмен,ИмяСервиса,ТочкаПодключения);
		КонецЕсли;
	
		ВС_Прокси.Пароль = Пароль;
		ВС_Прокси.Пользователь = Логин;
		Возврат ВС_Прокси;
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Возврат Неопределено;
	КонецПопытки;	
	
КонецФункции

Функция ОтправитьСМСПромо(Данные) Экспорт
	
	НачатьТранзакцию();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПромокодыТелефон");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(МАКСИМУМ(ИСТИНА), ЛОЖЬ) КАК ЕстьТелефон
	|ИЗ
	|	РегистрСведений.ПромокодыТелефон КАК ПромокодыТелефон
	|ГДЕ
	|	ПромокодыТелефон.Телефон ПОДОБНО &Телефон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПромокодыТелефон.ПромоКод КАК ПромоКод
	|ИЗ
	|	РегистрСведений.ПромокодыТелефон КАК ПромокодыТелефон
	|ГДЕ
	|	ПромокодыТелефон.Телефон = """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПромоКод";
	
	Запрос.УстановитьПараметр("Телефон", "%"+Данные.Телефон+"%"); 
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаТелефоны = Результат[0].Выбрать();
	
	Пока ВыборкаТелефоны.Следующий() цикл
		Если ВыборкаТелефоны.ЕстьТелефон тогда
			ОтменитьТранзакцию();
			возврат "На этот телефон уже было отправленно смс!";	
		КонецЕсли;		
	КонецЦикла;
	
	Если Результат[1].Пустой() тогда 
		ОтменитьТранзакцию();
		возврат "Кончились коды!";
	КонецЕсли;
	
	Выборка = Результат[1].Выбрать();
	Пока Выборка.Следующий() цикл
		МенеджерЗаписи = РегистрыСведений.ПромокодыТелефон.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Данные);
		МенеджерЗаписи.ПромоКод = Выборка.ПромоКод;
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
	Документ = Данные.Документ;
	Телефон = Данные.Телефон;
	Движения = РегистрыСведений.ОтправкаСМС.СоздатьНаборЗаписей();
	Движения.Отбор.Регистратор.Значение = Документ;
	ТелефонПер = СокрЛП(Лев(Телефон,10));
	Если СтрДлина(ТелефонПер) < 10 тогда
		ОтменитьТранзакцию();
		Возврат "Некорректный телефон!";
	КонецЕсли;
	Если Лев(ТелефонПер,3) = "495" или Лев(ТелефонПер,3) = "499"
		или Лев(ТелефонПер,3) = "496" или Лев(ТелефонПер,3) = "812" тогда
		ОтменитьТранзакцию();
		Возврат "Введен городской телефйо";
	КонецЕсли;
	Движение = Движения.Добавить();
	Движение.Период = ТекущаяДата();
	Движение.created = Данные.Сотрудник;
	Движение.phone = ТелефонПер;
	Движение.sms = "Добро пожаловать в EAPTEKA.RU! Используйте скидку 250 руб. на первый онлайн-заказ от 2000 руб. по промокоду "+Выборка.ПромоКод+". Введите его при оформлении заказа на сайте EAPTEKA.RU или в мобильном приложении. Скачайте приложение по ссылке goo.gl/Us9g8x.";
	Движение.approved = "auto";
	Движение.id_t_tc = "2";
	Движение.iddoc = "";
	Движение.type = 1;
	Движения.Записать();
	
	ЗафиксироватьТранзакцию();
	
	Возврат Истина;
	
КонецФункции
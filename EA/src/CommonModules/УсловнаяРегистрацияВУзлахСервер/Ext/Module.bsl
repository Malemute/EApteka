
// Процедура - Условная регистрация в узлах документы справочники при записи
//     Обработчик события ПриЗаписи справочников и документов, выполняет условную регистрацию в узлах
//
Процедура УсловнаяРегистрацияВУзлах_ДокументыСправочникиПриЗаписи(Источник, Отказ) Экспорт
	
	Если Отказ = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ПолноеИмяМетаданныхИсточника = Источник.Метаданные().ПолноеИмя();
	ВидОбъектаИсточника = ОбщегоНазначенияПовтИсп.ПолучитьСсылкуВидаОбъектаМПоОбъекту( ПолноеИмяМетаданныхИсточника );
	
	// условная регистрация не может быть настроена без ВидОбъекта, потому при его отсутствии работу прерываем
	Если ВидОбъектаИсточника = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// проверим наличие настроек условной регистрации
	СтруктураАктивныхНастроек = ЗначениеИзСтрокиВнутр( УсловнаяРегистрацияВУзлахПовтИсп.ПолучитьСтруктуруАктивныхНастроекУсловнойРегистрацииДляВидаОбъекта( ВидОбъектаИсточника ) );
	МассивНайденныхНастроек = СтруктураАктивныхНастроек.МассивНастроекБезУсловий; // настройки с опцией "ВсеБезУсловий" применяются без дополнительных проверок
	
	// проверять срабатывания условий имеет смысл только, если настройки по условиям вообще есть
	Если СтруктураАктивныхНастроек.МассивНастроекПоУсловиям.Количество() > 0 Тогда
		
		ВидОбъектаДляНастроекУсловнойРегистрации = ОбщегоНазначенияПовтИсп.ПолучитьСсылкуВидаОбъектаМПоОбъекту( Метаданные.Справочники.НастройкиУсловнойРегистрацииВУзлахПлановОбмена.ПолноеИмя() );
		
		Если ВидОбъектаДляНастроекУсловнойРегистрации = Неопределено Тогда
			ТаблицаНастроекНайденыхПоУсловиям = Неопределено;
		Иначе
			ТаблицаНастроекНайденыхПоУсловиям = СвязиИОтборы.ПолучитьТаблицуОбъектовСвязанныхСОбъектомИсточникомУсловий( ВидОбъектаДляНастроекУсловнойРегистрации, Источник );
		КонецЕсли;
			
		Если ТаблицаНастроекНайденыхПоУсловиям <> Неопределено Тогда
			
			// запоним найденные по условиям настройки
			Для Каждого СтрокаТаблицы Из ТаблицаНастроекНайденыхПоУсловиям Цикл
				
				// применять найденные по условиям настройки можно только те, в которых стоит опция "Регистрировать",
				// потому необходима доп. проверка
				Если СтруктураАктивныхНастроек.МассивНастроекПоУсловиям.Найти( СтрокаТаблицы.ПолеОбъектаРезультата ) <> Неопределено Тогда
					МассивНайденныхНастроек.Добавить( СтрокаТаблицы.ПолеОбъектаРезультата );
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// выполним регистрацию для узлов в найденных настройках
	Для Каждого НастройкаУсловнойРегистрации Из МассивНайденныхНастроек Цикл
		
		СтрокиУзловНастройки = СтруктураАктивныхНастроек.ТаблицаУзловНастроек.НайтиСтроки( Новый Структура( "Настройка", НастройкаУсловнойРегистрации ) );
		
		Для Каждого СтрокаУзла Из СтрокиУзловНастройки Цикл
			
			Попытка
				Источник.ОбменДанными.Получатели.Добавить( СтрокаУзла.Узел );
			Исключение
				ЗаписьЖурналаРегистрации( "Условная регистрация.Ошибка", УровеньЖурналаРегистрации.Ошибка, Источник.Метаданные, Источник.Ссылка, "Не удалось добавить узел <" + СтрокаУзла.Узел + "> в качестве получателя для регистрации изменений по причине: " + ОписаниеОшибки() );
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

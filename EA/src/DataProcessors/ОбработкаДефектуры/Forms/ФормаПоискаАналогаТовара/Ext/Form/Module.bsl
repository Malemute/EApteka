
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СтрокаПоиска = "";
	Параметры.Свойство("ИскомыйТовар", СтрокаПоиска); 
	Если ПустаяСтрока(СтрокаПоиска) Тогда

		Отказ = Истина;
		Возврат;

	КонецЕсли; 
	
	НаименованиеТовара = СокрЛП(СтрокаПоиска);
	СтрокаПоиска = НаименованиеТовара;
	ТоварВыбран = Ложь;

КонецПроцедуры

&НаСервере
Функция НайтиТоварыСервере(СтрокаПоиск)

	ТабТоваров.Очистить();

	ТаблицаПоиска = Новый ТаблицаЗначений;
	ТаблицаПоиска.Колонки.Добавить("NumWord",			Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2,0,ДопустимыйЗнак.Неотрицательный)));
	ТаблицаПоиска.Колонки.Добавить("mLikeWord",			Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100,ДопустимаяДлина.Переменная)));
	ТаблицаПоиска.Колонки.Добавить("LikeWordМаска",		Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100,ДопустимаяДлина.Переменная)));
	ТаблицаПоиска.Колонки.Добавить("mLikeWordМаска",	Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100,ДопустимаяДлина.Переменная)));
	
	ИскомаяФраза = СокрЛП(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрокаПоиск, Символ(160), " "), "+", " "), "+", " "), "/", " "), "\", " "), ",", " "), ".", ""), "  ", " "), "  ", " "));
	стрИскомаяФраза = СтрЗаменить(ИскомаяФраза, " ", Символы.ПС);
	Если ПустаяСтрока(стрИскомаяФраза) Тогда
		Возврат Неопределено; 
	КонецЕсли;

	локКолСлов = ?(ПустаяСтрока(стрИскомаяФраза),0, СтрЧислоСтрок(стрИскомаяФраза));
	Если ПустаяСтрока(стрИскомаяФраза) Тогда
		Возврат Неопределено;
	Иначе
		
		Для СчСлов = 1 По СтрЧислоСтрок(стрИскомаяФраза) Цикл
			
			Слово = ВРЕГ(СтрПолучитьСтроку(стрИскомаяФраза, СчСлов));
			СловоФонетическийКод = справочники.Номенклатура.ПолучитьФонетическийКод(Слово);
			Если ЗначениеЗаполнено(СловоФонетическийКод) и СтрДлина(СловоФонетическийКод) > 3 тогда
				НоваяСтрока 				= ТаблицаПоиска.Добавить();
				НоваяСтрока.NumWord 		= СчСлов;	
				НоваяСтрока.mLikeWord 		= СловоФонетическийКод;
				НоваяСтрока.LikeWordМаска 	=  "%" + Слово + "%";
				НоваяСтрока.mLikeWordМаска 	= "%" + СловоФонетическийКод + "%";
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;

	КоличествоСлов = ТаблицаПоиска.Количество();
	Если КоличествоСлов = 0 тогда
		Возврат Неопределено;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Слова.NumWord,
	|	Слова.mLikeWord,
	|	Слова.LikeWordМаска,
	|	Слова.mLikeWordМаска
	|ПОМЕСТИТЬ Слова
	|ИЗ
	|	&ТЗ КАК Слова
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Слова.NumWord,
	|	Слова.mLikeWord,
	|	Слова.LikeWordМаска,
	|	Слова.mLikeWordМаска
	|ПОМЕСТИТЬ втСловаСЗаполненнымФонетическимКодом
	|ИЗ
	|	Слова КАК Слова
	|ГДЕ
	|	Слова.mLikeWord <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСловаСЗаполненнымФонетическимКодом.NumWord) КАК NumWord
	|ПОМЕСТИТЬ втНайденныеБезМНН
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСловаСЗаполненнымФонетическимКодом КАК втСловаСЗаполненнымФонетическимКодом
	|		ПО (Номенклатура.ФонетическийКодПолноеНаименование ПОДОБНО втСловаСЗаполненнымФонетическимКодом.mLikeWordМаска)
	|ГДЕ
	|	НЕ &ПоМНН
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура.Ссылка
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСловаСЗаполненнымФонетическимКодом.NumWord) >= &КоличествоСлов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	КОЛИЧЕСТВО(Слова.NumWord) КАК NumWord
	|ПОМЕСТИТЬ втНайденныеМНН
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МНН КАК МННСправочник
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Слова КАК Слова
	|			ПО (МННСправочник.Наименование ПОДОБНО Слова.LikeWordМаска)
	|		ПО Номенклатура.МНН = МННСправочник.Ссылка
	|ГДЕ
	|	&ПоМНН
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура.Ссылка
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Слова.NumWord) >= &КоличествоСлов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНайденныеБезМНН.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ втНеАналоги
	|ИЗ
	|	втНайденныеБезМНН КАК втНайденныеБезМНН
	|
	|СГРУППИРОВАТЬ ПО
	|	втНайденныеБезМНН.Номенклатура
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	втНайденныеМНН.Номенклатура
	|ИЗ
	|	втНайденныеМНН КАК втНайденныеМНН
	|
	|СГРУППИРОВАТЬ ПО
	|	втНайденныеМНН.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНеАналоги.Номенклатура КАК Номенклатура
//	|	втНеАналоги.Номенклатура.МНН КАК АналогДля
	|ИЗ
	|	втНеАналоги КАК втНеАналоги
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НоменклатураВся.Ссылка
//	|	НоменклатураВся.Ссылка.МНН
	|ИЗ
	|	втНеАналоги КАК втНеАналоги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураВся
	|		ПО втНеАналоги.Номенклатура.МНН = НоменклатураВся.МНН
	|			И (втНеАналоги.Номенклатура.МНН <> ЗНАЧЕНИЕ(Справочник.МНН.ПустаяСсылка))
	|ГДЕ
	|	НЕ НоменклатураВся.Ссылка В
	|				(ВЫБРАТЬ
	|					втНеАналоги.Номенклатура
	|				ИЗ
	|					втНеАналоги КАК втНеАналоги)
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураВся.Ссылка
//	|	НоменклатураВся.Ссылка.МНН
	|";

	Запрос.УстановитьПараметр("ТЗ", ТаблицаПоиска);
	Запрос.УстановитьПараметр("КоличествоСлов", КоличествоСлов); 
	Запрос.УстановитьПараметр("ПоМНН", Ложь);

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		ТабТоваров.Загрузить(Результат.Выгрузить());
		Возврат Истина;

	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура НайтиТовар(Команда)

	НайтиТоварыСервере(СтрокаПоиска);

КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если Элементы.ТабТоваров.ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(, "Не выбран товар", 15);
		Возврат;
	КонецЕсли; 
	
	ТоварВыбран = Истина;
	Закрыть(Элементы.ТабТоваров.ТекущиеДанные.Номенклатура);

КонецПроцедуры

&НаКлиенте
Процедура ТабТоваровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Выбрать(Неопределено);

КонецПроцедуры

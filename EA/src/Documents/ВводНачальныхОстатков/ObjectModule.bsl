
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Узел = ПланыОбмена.ПланОбменаОбновлениями.НайтиПоРеквизиту("АдресХранения",АдресХранения);
	Если ЗначениеЗаполнено(Узел) тогда
		Префикс = Узел.Префикс;
	Иначе
		Префикс = "";
	КонецЕсли;
	УзелОбменДанными = ПланыОбмена.ПланОбменаДанными.НайтиПоРеквизиту("ОсновнойУзел",Узел);
	Движения.ОстаткиТовара.Очистить();
	Движения.ОстаткиТовара.Записывать = Истина;
	Движения.МестаЗаказов.Очистить();
	Движения.МестаЗаказов.Записывать = Истина;
	Для каждого строка из Остатки цикл
		Движение = Движения.ОстаткиТовара.Добавить();
		Движение.Период = Дата;
		ЗаполнитьЗначенияСвойств(Движение,Строка);
	КонецЦикла;
	ПланыОбмена.ЗарегистрироватьИзменения(УзелОбменДанными,Движения.ОстаткиТовара);
	//Для каждого строка из Заказы цикл
	//	Движение = Движения.МестаЗаказов.ДобавитьПриход();
	//	Движение.Период = Дата;
	//	Движение.Заказ = Строка.Заказ;
	//	Движение.МестоЗаказа = Строка.МестоЗаказа;
	//	Движение.Раскладка = Строка.Количество;		
	//КонецЦикла;
	//ПланыОбмена.ЗарегистрироватьИзменения(УзелОбменДанными,Движения.МестаЗаказов);
	Склад = АдресХранения.ОсновнойСклад;
	Организация = АдресХранения.Фирма;
	Для каждого строка из ЗаказыДляВозвратов цикл
		Чек = Документы.Чеки.СоздатьДокумент();
		Чек.Организация = Организация;
		Чек.Дата = Строка.ДатаПродажи;
		ЗаполнитьЗначенияСвойств(Чек,Строка);
		Если ЗначениеЗаполнено(Строка.RRN) тогда
			Чек.ОплатаПоКарте = Истина;
		КонецЕсли;
		Чек.Отдел = Склад;
		Чек.ДокументОснование = Строка.Заказ;
		Чек.ТипЦены =  Строка.Заказ.ТипЦены;
		Для каждого строкаЗаказ из Строка.Заказ.Товар цикл
			СтрокаЧек = Чек.Реализация.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаЧек,строкаЗаказ);
			СтрокаЧек.Операц = Перечисления.ТорговыеОперации.Продажа;
		КонецЦикла;
		Чек.УстановитьНовыйНомер(Префикс);
		Чек.ОбменДанными.Загрузка = Истина;
		Чек.Записать(РежимЗаписиДокумента.Запись);
		Чек.ОбменДанными.Загрузка = Ложь;
		Чек.Записать(РежимЗаписиДокумента.Проведение);
		ПланыОбмена.ЗарегистрироватьИзменения(УзелОбменДанными,Чек);
		ПланыОбмена.ЗарегистрироватьИзменения(УзелОбменДанными,Чек.Движения.ОстаткиТовара);
		ПланыОбмена.ЗарегистрироватьИзменения(УзелОбменДанными,Чек.Движения.Реализация);
	КонецЦикла;
	СоздатьМаршрутНаАптекуНачальныеОстатки();
КонецПроцедуры

Процедура СоздатьМаршрутНаАптекуНачальныеОстатки() Экспорт
	Если Заказы.Количество() = 0 тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутНаАптеку.Ссылка
	|ИЗ
	|	Документ.МаршрутНаАптеку КАК МаршрутНаАптеку
	|ГДЕ
	|	МаршрутНаАптеку.ДокументОснование = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Результат = Запрос.Выполнить();
	Если не Результат.Пустой() тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() цикл
			ДокМаршрут = Выборка.Ссылка.ПолучитьОбъект();
		КонецЦикла;
	Иначе
		ДокМаршрут = Документы.МаршрутНаАптеку.СоздатьДокумент();
	КонецЕсли;
	
	ДокМаршрут.АдресХранения = АдресХранения;
	ДокМаршрут.ДокументОснование = Ссылка;
	ДокМаршрут.НомерДокументаОснования = "111111";
	ДокМаршрут.Дата = НачалоДня(Дата);
	Для каждого строка из Заказы цикл
		СтрокаСостав = ДокМаршрут.Состав.Добавить();
		СтрокаСостав.Заказ = Строка.Заказ;
		СтрокаСостав.МестоЗаказа = Строка.МестоЗаказа;
	КонецЦикла;	
	ДокМаршрут.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры
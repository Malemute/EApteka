
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Контрагент", Контрагент);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения",     ЗначенияЗаполнения);
		ПараметрыФормы.Вставить("ВидИмпортируемыхДанных", ВыбранноеЗначение.ВидИмпортируемыхДанных);
		ПараметрыФормы.Вставить("АдресТоваровВХранилище", ВыбранноеЗначение.АдресТоваровВХранилище);
		
		ОткрытьФорму("Документ.ИмпортДанныхКонтрагентов.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ИмпортДанныхКонтрагентов" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	КомпоновкаДанныхКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Контрагент",
		Контрагент,
		ВидСравненияКомпоновкиДанных.Равно,,
		ЗначениеЗаполнено(Контрагент));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ЗагрузитьИзВнешнихФайлов(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Контрагент", Контрагент);
	
	ОткрытьФорму("ОбщаяФорма.ИмпортДанныхКонтрагента", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОстаткиИзТабличногоДокумента(Команда)
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Не выбран контрагент'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Шаг1Подсказка", "Необходимо скопировать колонки в таблицу из внешнего файла (Excel. Word и пр.) через буфер обмена.
	|Обязательно должна быть заполнена колонка ""Код товара контрагента"".");
	ПараметрыФормы.Вставить("Поставщик", Контрагент);
	ПараметрыФормы.Вставить("ЗагружатьПроизводителя", Истина);
	ПараметрыФормы.Вставить("ВидИмпортируемыхДанных", ПредопределенноеЗначение("Перечисление.ВидыИмпортируемыхДанных.Остатки"));
	
	ОткрытьФорму("Обработка.ЗагрузкаДанныхИзВнешнихФайлов.Форма.Форма", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗакупкиИзТабличногоДокумента(Команда)
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Не выбран контрагент'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Шаг1Подсказка", "Необходимо скопировать колонки в таблицу из внешнего файла (Excel. Word и пр.) через буфер обмена.
	|Обязательно должна быть заполнена колонка ""Код товара контрагента"".");
	ПараметрыФормы.Вставить("Поставщик", Контрагент);
	ПараметрыФормы.Вставить("ВидИмпортируемыхДанных", ПредопределенноеЗначение("Перечисление.ВидыИмпортируемыхДанных.Закупки"));
	ПараметрыФормы.Вставить("ЗагружатьКоличество", Истина);
	ПараметрыФормы.Вставить("ЗагружатьЦены", Истина);
	
	ОткрытьФорму("Обработка.ЗагрузкаДанныхИзВнешнихФайлов.Форма.Форма", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПродажиИзТабличногоДокумента(Команда)
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Не выбран контрагент'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Шаг1Подсказка", "Необходимо скопировать колонки в таблицу из внешнего файла (Excel. Word и пр.) через буфер обмена.
	|Обязательно должна быть заполнена колонка ""Код товара контрагента"".");
	ПараметрыФормы.Вставить("Поставщик", Контрагент);
	ПараметрыФормы.Вставить("ВидИмпортируемыхДанных", ПредопределенноеЗначение("Перечисление.ВидыИмпортируемыхДанных.Продажи"));
	ПараметрыФормы.Вставить("ЗагружатьКоличество", Истина);
	
	ОткрытьФорму("Обработка.ЗагрузкаДанныхИзВнешнихФайлов.Форма.Форма", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

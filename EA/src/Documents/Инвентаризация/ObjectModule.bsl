Процедура СоздатьПеремещение() Экспорт
	
	Если не ЗначениеЗаполнено(Ссылка) или СписаниеПоПартиям.Количество() = 0 тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Перемещение.Ссылка
	|ИЗ
	|	Документ.Перемещение КАК Перемещение
	|ГДЕ
	|	Перемещение.ДокументОснование = &ДокументОснование
	|	И Перемещение.Проведен";
	
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() тогда
		Перемещение = Документы.Перемещение.СоздатьДокумент();
	Иначе
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() цикл
			Перемещение = Выборка.Ссылка.ПолучитьОбъект();
			Прервать;
		КонецЦикла;
	КонецЕсли;
	
	Перемещение.Заполнить(Ссылка);
	Перемещение.ВводЗавершен = Истина;
	Перемещение.РазрешитьПродажу = Истина;
	
	Перемещение.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Процедура СоздатьПриход() Экспорт
	
	Если не ЗначениеЗаполнено(Ссылка) и ПриходПоТоварам.Количество() > 0  тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Приходная.Ссылка
	|ИЗ
	|	Документ.Приходная КАК Приходная
	|ГДЕ
	|	Приходная.ДокументОснование = &ДокументОснование
	|	И Приходная.Проведен";
	
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() тогда
		Приходная = Документы.Приходная.СоздатьДокумент();
	Иначе
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() цикл
			Приходная = Выборка.Ссылка.ПолучитьОбъект();
			Прервать;
		КонецЦикла;
	КонецЕсли;
	
	Приходная.Заполнить(Ссылка);
	Приходная.ТипНакладной = Перечисления.ТипыПрихНакл.ВводОстатков;
	Приходная.ВычНП = Истина;
	Приходная.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры


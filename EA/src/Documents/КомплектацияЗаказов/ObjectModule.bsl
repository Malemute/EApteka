
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯ.Очистить();
	Движения.КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯ.Записывать = Истина;	
	
	Движения.ХранениеЗСЯ.Очистить();
	Движения.ХранениеЗСЯ.Записывать = Истина;

	
	Движения.ТоварыКСборке.Очистить();
	Движения.ТоварыКСборке.Записывать = Истина;
		
	Движения.ХранениеЗСЯПоТоварам.Очистить();
	Движения.ХранениеЗСЯПоТоварам.Записывать = Истина;

	
	ТаблицаКомплектацияСвернуто = Комплектация.Выгрузить(,"Заказ,ЗСЯ");
	ТаблицаКомплектацияСвернуто.Свернуть("Заказ,ЗСЯ");
	
	ТипСборки = ДокументОснование.ТипСборки;
	Для каждого строка из ТаблицаКомплектацияСвернуто цикл
		Движение = 	Движения.КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯ.Добавить();
		Движение.Период = Дата;
		Движение.Заказ = Строка.Заказ;
		Движение.ЗСЯ = Строка.ЗСЯ;
	КонецЦикла;
	Если КомплектацияЗавершена тогда
		Для каждого Строка из Комплектация цикл
			Если Строка.Количество > 0 тогда
				Движение = Движения.ТоварыКСборке.ДобавитьРасход();	
				Движение.Период = Дата;
				Движение.Склад = Склад;
				Движение.Документ = Строка.Заказ;
				Движение.Товар = Строка.Товар;
				Если ТипСборки <> Перечисления.ТипСборки.СборкаЗаказовИзКоробки тогда
					Движение.Партия = Строка.Партия;
				КонецЕсли;
				Движение.КоличествоНаКомплектации = Строка.Количество;			
				Движение.КоличествоНеХватило = 0;
				Движение.ТипСборки = ?(ЗначениеЗаполнено(ДокументОснование),ДокументОснование.ТипСборки,Перечисления.ТипСборки.ПустаяСсылка());
			
				Движение = Движения.ХранениеЗСЯПоТоварам.ДобавитьПриход();
				Движение.Период = Дата;
				Движение.Склад = Склад;
				Движение.Документ = Строка.Заказ;
				Движение.Товар = Строка.Товар;
				Движение.Партия = Строка.Партия;
				Движение.ЗСЯ = Строка.ЗСЯ;
				Движение.Количество = Строка.Количество; 				
			КонецЕсли;
		КонецЦикла;
		Движения.ТоварыКСборке.Записать();
		Движения.ХранениеЗСЯПоТоварам.Записать();
		
		#Область Старое
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	КомплектацияЗаказовКомплектация.Заказ,
		//|	КомплектацияЗаказовКомплектация.Ссылка.Склад,
		//|	КомплектацияЗаказовКомплектация.ЗСЯ
		//|ПОМЕСТИТЬ втСобранныеЗаказы
		//|ИЗ
		//|	Документ.КомплектацияЗаказов.Комплектация КАК КомплектацияЗаказовКомплектация
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКСборке.Остатки(, Документ В (&МассивЗАказов)) КАК ТоварыКСборкеОстатки
		//|		ПО КомплектацияЗаказовКомплектация.Заказ = ТоварыКСборкеОстатки.Документ
		//|			И (ТоварыКСборкеОстатки.КоличествоНаКомплектацииОстаток > 0
		//|				ИЛИ ТоварыКСборкеОстатки.КоличествоКСборкеОстаток > 0)
		//|ГДЕ
		//|	ТоварыКСборкеОстатки.Документ ЕСТЬ NULL 
		//|	И КомплектацияЗаказовКомплектация.Ссылка = &Ссылка
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	КомплектацияЗаказовКомплектация.Заказ,
		//|	КомплектацияЗаказовКомплектация.Ссылка.Склад,
		//|	КомплектацияЗаказовКомплектация.ЗСЯ
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	втСобранныеЗаказы.Заказ,
		//|	КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯСрезПоследних.ЗСЯ.Отдел КАК Склад,
		//|	КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯСрезПоследних.ЗСЯ
		//|ПОМЕСТИТЬ втСобранныеЗаказыИЗСЯ
		//|ИЗ
		//|	втСобранныеЗаказы КАК втСобранныеЗаказы
		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯ.СрезПоследних КАК КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯСрезПоследних
		//|		ПО втСобранныеЗаказы.Заказ = КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯСрезПоследних.Заказ
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	втСобранныеЗаказыИЗСЯ.Заказ,
		//|	втСобранныеЗаказыИЗСЯ.Склад,
		//|	втСобранныеЗаказыИЗСЯ.ЗСЯ,
		//|	1 КАК Количество,
		//|	ЗаказТовар.Товар,
		//|	СУММА(ЗаказТовар.Количество) КАК Количество1
		//|ПОМЕСТИТЬ втВТ
		//|ИЗ
		//|	втСобранныеЗаказыИЗСЯ КАК втСобранныеЗаказыИЗСЯ
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ХранениеЗСЯ.Остатки(
		//|				,
		//|				Заказ В
		//|					(ВЫБРАТЬ
		//|						втСобранныеЗаказы.Заказ
		//|					ИЗ
		//|						втСобранныеЗаказы КАК втСобранныеЗаказы)) КАК ХранениеЗСЯОстатки
		//|		ПО втСобранныеЗаказыИЗСЯ.Заказ = ХранениеЗСЯОстатки.Заказ
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Заказ.Товар КАК ЗаказТовар
		//|		ПО втСобранныеЗаказыИЗСЯ.Заказ = ЗаказТовар.Ссылка
		//|ГДЕ
		//|	ХранениеЗСЯОстатки.Заказ ЕСТЬ NULL 
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	втСобранныеЗаказыИЗСЯ.Заказ,
		//|	втСобранныеЗаказыИЗСЯ.Склад,
		//|	втСобранныеЗаказыИЗСЯ.ЗСЯ,
		//|	ЗаказТовар.Товар
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	втВТ.Заказ,
		//|	втВТ.Склад,
		//|	втВТ.ЗСЯ,
		//|	втВТ.Количество,
		//|	втВТ.Количество1,
		//|	СУММА(ТоварыКСборкеОбороты.КоличествоНаКомплектацииПриход + ТоварыКСборкеОбороты.КоличествоНеХватилоПриход) КАК Количество2,
		//|	ВЫБОР
		//|		КОГДА СУММА(ТоварыКСборкеОбороты.КоличествоНеХватилоОборот) = 0
		//|			ТОГДА ЛОЖЬ
		//|		ИНАЧЕ ИСТИНА
		//|	КОНЕЦ КАК ЕстьНеХватило
		//|ПОМЕСТИТЬ втВТ2
		//|ИЗ
		//|	втВТ КАК втВТ
		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКСборке.Обороты КАК ТоварыКСборкеОбороты
		//|		ПО втВТ.Заказ = ТоварыКСборкеОбороты.Документ
		//|			И втВТ.Товар = ТоварыКСборкеОбороты.Товар
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	втВТ.Заказ,
		//|	втВТ.Склад,
		//|	втВТ.ЗСЯ,
		//|	втВТ.Количество1,
		//|	втВТ.Количество
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	втВТ2.Заказ,
		//|	втВТ2.Склад,
		//|	втВТ2.ЗСЯ,
		//|	втВТ2.Количество,
		//|	МАКСИМУМ(втВТ2.ЕстьНеХватило) КАК ЕстьНеХватило
		//|ИЗ
		//|	втВТ2 КАК втВТ2
		//|ГДЕ
		//|	втВТ2.Количество2 >= втВТ2.Количество1
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	втВТ2.Заказ,
		//|	втВТ2.Склад,
		//|	втВТ2.ЗСЯ,
		//|	втВТ2.Количество";
		//Запрос.УстановитьПараметр("Ссылка",Ссылка);
		//Запрос.УстановитьПараметр("МассивЗАказов",Комплектация.ВыгрузитьКолонку("Заказ"));
		//Выборка = Запрос.Выполнить().Выбрать();
		//Пока Выборка.Следующий() цикл
		//	Движение = Движения.ХранениеЗСЯ.ДобавитьПриход();
		//	ЗаполнитьЗначенияСвойств(Движение,Выборка);
		//	Движение.Период = Дата;
		//	Заказ = Выборка.Заказ.ПолучитьОбъект();
		//	Если Выборка.ЕстьНеХватило тогда
		//		Заказ.Собран = Ложь;				
		//		Заказ.СтатусыОбработкиЗаказа = справочники.СтатусыОбработкиЗаказа.НайтиПоКоду(4);
		//		Заказ.ДополнительныеСвойства.Вставить("ПометитьНаОбмен");
		//		Заказ.Записать(РежимЗаписиДокумента.Проведение);
		//	Иначе
		//		Заказ.СтатусыОбработкиЗаказа = справочники.СтатусыОбработкиЗаказа.НайтиПоКоду(10);
		//		Заказ.Собран = Истина;
		//		Заказ.ДополнительныеСвойства.Вставить("ПометитьНаОбмен");
		//		Если ДокументОснование.ТипСборки = перечисления.ТипСборки.СборкаЗаказовИзКоробки тогда
		//			Заказ.ДополнительныеСвойства.Вставить("ОтправитьСМС");				
		//		КонецЕсли;
		//		Заказ.Записать(РежимЗаписиДокумента.Проведение);
		//		Заказ.СтатусыОбработкиЗаказа = справочники.СтатусыОбработкиЗаказа.НайтиПоКоду(21);
		//		Заказ.Записать(РежимЗаписиДокумента.Проведение);
		//	КонецЕсли;
		//КонецЦикла;
		#КонецОбласти
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомплектацияЗаказовКомплектация.Заказ
		|ПОМЕСТИТЬ втЗаказы
		|ИЗ
		|	Документ.КомплектацияЗаказов.Комплектация КАК КомплектацияЗаказовКомплектация
		|ГДЕ
		|	КомплектацияЗаказовКомплектация.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	КомплектацияЗаказовКомплектация.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХранениеЗСЯПоТоварамОстатки.Документ КАК Документ,
		|	ХранениеЗСЯПоТоварамОстатки.Товар,
		|	СУММА(ХранениеЗСЯПоТоварамОстатки.КоличествоОстаток) КАК Количество
		|ПОМЕСТИТЬ втСобранныйТоварПоЗаказам
		|ИЗ
		|	РегистрНакопления.ХранениеЗСЯПоТоварам.Остатки(
		|			&Период,
		|			Документ В
		|				(ВЫБРАТЬ
		|					втЗаказы.Заказ
		|				ИЗ
		|					втЗаказы КАК втЗаказы)) КАК ХранениеЗСЯПоТоварамОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ХранениеЗСЯПоТоварамОстатки.Документ,
		|	ХранениеЗСЯПоТоварамОстатки.Товар
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказТовар.Ссылка КАК Ссылка,
		|	ЗаказТовар.Товар,
		|	СУММА(ЗаказТовар.Количество) КАК Количество
		|ПОМЕСТИТЬ втКоличествоЗаказов
		|ИЗ
		|	Документ.Заказ.Товар КАК ЗаказТовар
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЗаказы КАК втЗаказы
		|		ПО ЗаказТовар.Ссылка = втЗаказы.Заказ
		|ГДЕ
		|	НЕ ЗаказТовар.Товар.ВиртуальныйТовар
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказТовар.Ссылка,
		|	ЗаказТовар.Товар
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	втКоличествоЗаказов.Ссылка
		|ПОМЕСТИТЬ втНеСобранныеЗаказы
		|ИЗ
		|	втКоличествоЗаказов КАК втКоличествоЗаказов
		|		ЛЕВОЕ СОЕДИНЕНИЕ втСобранныйТоварПоЗаказам КАК втСобранныйТоварПоЗаказам
		|		ПО втКоличествоЗаказов.Ссылка = втСобранныйТоварПоЗаказам.Документ
		|			И втКоличествоЗаказов.Товар = втСобранныйТоварПоЗаказам.Товар
		|ГДЕ
		|	втКоличествоЗаказов.Количество - ЕСТЬNULL(втСобранныйТоварПоЗаказам.Количество, 0) > 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТоварыКСборкеОстатки.Документ
		|ИЗ
		|	РегистрНакопления.ТоварыКСборке.Остатки(
		|			&Период,
		|			Документ В
		|				(ВЫБРАТЬ
		|					втЗаказы.Заказ
		|				ИЗ
		|					втЗаказы КАК втЗаказы)) КАК ТоварыКСборкеОстатки
		|ГДЕ
		|	(ТоварыКСборкеОстатки.КоличествоКСборкеОстаток > 0
		|			ИЛИ ТоварыКСборкеОстатки.КоличествоНаКомплектацииОстаток > 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКСборкеОстатки.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втЗаказы.Заказ
		|ПОМЕСТИТЬ втСобранныеЗаказы
		|ИЗ
		|	втЗаказы КАК втЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ втНеСобранныеЗаказы КАК втНеСобранныеЗаказы
		|		ПО втЗаказы.Заказ = втНеСобранныеЗаказы.Ссылка
		|ГДЕ
		|	втНеСобранныеЗаказы.Ссылка ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКСборкеОбороты.Документ
		|ПОМЕСТИТЬ втЗаказыСНехватило
		|ИЗ
		|	РегистрНакопления.ТоварыКСборке.Обороты(
		|			,
		|			,
		|			,
		|			Документ В
		|				(ВЫБРАТЬ
		|					втЗаказы.Заказ
		|				ИЗ
		|					втЗаказы КАК втЗаказы)) КАК ТоварыКСборкеОбороты
		|ГДЕ
		|	ТоварыКСборкеОбороты.КоличествоНеХватилоПриход <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКСборкеОбороты.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСобранныеЗаказы.Заказ,
		|	ВЫБОР
		|		КОГДА втЗаказыСНехватило.Документ ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьНеХватило
		|ИЗ
		|	втСобранныеЗаказы КАК втСобранныеЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ втЗаказыСНехватило КАК втЗаказыСНехватило
		|		ПО втСобранныеЗаказы.Заказ = втЗаказыСНехватило.Документ";
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Запрос.УстановитьПараметр("Период",Новый Граница(МоментВремени(),ВидГраницы.Включая));
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() цикл
			СтатусыДокументов.УстановитьСтатусСборкиЗаказа(Выборка.Заказ,Ссылка,Справочники.СтатусыОбработкиЗаказа.ЗаказВТочкеСамовывоза,Сотрудник,Дата);
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

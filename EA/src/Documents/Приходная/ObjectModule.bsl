
Процедура ПередЗаписью(Отказ, РежимЗаписи)
	СсылкаНовая = неопределено;
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение тогда
		Если ЭтоНовый() тогда
			УИД = Новый УникальныйИдентификатор;
			СсылкаНовая = Документы.Приходная.ПолучитьСсылку(УИД);
			ЭтотОбъект.УстановитьСсылкуНового(СсылкаНовая);
			ЭтотОбъект.УстановитьНовыйНомер();
		КонецЕсли;
		НачатьТранзакцию();
		Попытка
			Для каждого строка из Товары цикл
				Если Не ЗначениеЗаполнено(Строка.Товар) тогда
					Продолжить;
				КонецЕсли;
				
				ПартияУжеБыла = Ложь;
				Если Не ЗначениеЗаполнено(Строка.Партия) тогда
					Партия = Справочники.Партии.СоздатьЭлемент();
					Партия.Владелец = Строка.Товар;
					//Если Партия.Код < 10 тогда
					//	Партия.Код = 10;
					//КонецЕсли;
					Если Строка.Товар.Обязательный тогда
						Строка.Имп = 2;
					Иначе
						Строка.Имп = 0;
					КонецЕсли;
				Иначе
					Партия = Строка.Партия.ПолучитьОбъект();
					Если Партия.ПометкаУдаления тогда
						Партия.УстановитьПометкуУдаления(Ложь);
					КонецЕсли;
					Если Партия.Владелец <> Строка.Товар тогда
						Сообщить("Владелец партии и товар не совпадают! "+Строка.Товар.Наименование);
						Отказ = Истина;
						Возврат;
					КонецЕсли;
					ПартияУжеБыла = Истина;	
				КонецЕсли;
				Если НЕ ПартияУжеБыла или (ПартияУжеБыла и ТипНакладной = Перечисления.ТипыПрихНакл.Закупка) тогда
					Партия.Документ = ?(ЗначениеЗаполнено(СсылкаНовая),СсылкаНовая,Ссылка);
					Партия.Наименование = СокрЛП(Строка(Номер))+" от " + Формат(Дата,"ДФ=dd.MM.yyyy")+"; "+Клиент.Наименование;
					Партия.Серия = Строка.Серия;
					Партия.ГоденДо = Строка.ГоденДо;
					Партия.РеестроваяЦена = Строка.РеестроваяЦена;
					Партия.ЦенаПроизводителя = Строка.ЦенаПроизводителя;
					Партия.ЗакупочнаяЦена = Строка.Цена;
					//Если ТипНакладной = Перечисления.ТипыПрихНакл.Закупка тогда
					//	Партия.ШтрихКод = Справочники.Партии.ПолучитьШтрихКодПартии();
					//КонецЕсли;
					Партия.Сертификат = Строка.Сертификат;
					Партия.СертификатДо = Строка.СертификатДо;
					Партия.Выдан = Строка.Выдан;
					Партия.Производитель = Строка.Производитель;
					Партия.НомерГТД = Строка.НомерГТД;
					Если (Строка.Цена*Строка.Количество)-Строка.СуммаНДС <> 0 тогда
						ПроцНДСПост = Окр((Строка.СуммаНДС/((Строка.Цена*Строка.Количество)-строка.СуммаНДС))*100,0);
						Партия.СтавкаНДС = Справочники.СтавкиНДС.НайтиПоРеквизиту("Ставка",ПроцНДСПост);
					КонецЕсли;
					Партия.Фирма = Фирма;
					Партия.Записать();
				КонецЕсли;
				Строка.Партия = Партия.Ссылка;				
			КонецЦикла;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			Сообщение = новый СообщениеПользователю();
			Сообщение.Текст = "Не удалось записать документ по причине:"+символы.ПС + ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ОтделПретензий = ОбщиеФункцииСервер.ПолучитьОтделПретензий(Отдел);
	//Претензии

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриходнаяТовары.ПартияПретензии,
	|	ПриходнаяТовары.Претензия
	|ПОМЕСТИТЬ втПретензииБезПустых
	|ИЗ
	|	Документ.Приходная.Товары КАК ПриходнаяТовары
	|ГДЕ
	|   ПриходнаяТовары.Ссылка = &Ссылка
	|	И ПриходнаяТовары.ПартияПретензии <> ЗНАЧЕНИЕ(Справочник.Партии.ПустаяСсылка)
	|	И ПриходнаяТовары.Претензия <> ЗНАЧЕНИЕ(Справочник.Претензии.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПретензииОстатки.Склад,
	|	ПретензииОстатки.Партия КАК ПартияПретензии,
	|	ПретензииОстатки.Претензия,
	|	ПретензииОстатки.ДокументПретензии,
	|	ПретензииОстатки.СуммаОстаток КАК Сумма,
	|	ПретензииОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.Претензии.Остатки(
	|			&Дата,
	|			(Партия, Претензия) В
	|				(ВЫБРАТЬ
	|					втПретензииБезПустых.ПартияПретензии,
	|					втПретензииБезПустых.Претензия
	|				ИЗ
	|					втПретензииБезПустых КАК втПретензииБезПустых)) КАК ПретензииОстатки";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Дата",Новый Граница(МоментВремени(),ВидГраницы.Включая));

	ТЗОстатковПретензий = Запрос.Выполнить().Выгрузить();
	//ОстаткиТоваров
	Движения.ОстаткиТовара.Очистить();
	Движения.ОстаткиТовара.Записывать = Истина;
	Движения.Претензии.Очистить();
	Движения.Претензии.Записывать = Истина;
	Для Каждого строка из Товары Цикл
		
		КоличествоПоПретензии = Строка.Перевоз+Строка.Брак;
		
		Если КоличествоПоПретензии > 0 Тогда
			Движение = Движения.ОстаткиТовара.ДобавитьПриход();
			Движение.Товар = Строка.Товар;
			Движение.Период = Дата;
			Движение.Отдел = ОтделПретензий;
			Движение.Партия = Строка.Партия;
			Движение.Остаток = КоличествоПоПретензии;
			Движение.ТипОперации = Перечисления.ТипыОпераций.Закупка;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ПартияПретензии) тогда
		//движения по РС Претензии
		КонецЕсли;
		Количество = Строка.Количество-Строка.Недовоз-Строка.Перевоз-Строка.Брак;
		Если Количество <= 0 тогда
			Продолжить;
		КонецЕсли;
		
		Если ВычНП и ОрдернаяСхема = 0 тогда
			Движение = Движения.ОстаткиТовара.ДобавитьПриход();
			Движение.Товар = Строка.Товар;
			Движение.Период = Дата;
			Движение.Отдел = Отдел;
			Движение.Партия = Строка.Партия;
			Движение.Остаток = Количество;
			Если ТипНакладной = Перечисления.ТипыПрихНакл.Закупка тогда
				Движение.ТипОперации = Перечисления.ТипыОпераций.Закупка;
			Иначе
				Движение.ТипОперации = Перечисления.ТипыОпераций.ВозвратПокупателя;
			КонецЕсли;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Строка.ПартияПретензии) тогда
			ОстаткиПоПартииПретензии = ТЗОстатковПретензий.Скопировать(Новый Структура("ПартияПретензии,Претензия",Строка.ПартияПретензии,Строка.Претензия));		
			КолП = Количество;
			Для каждого остаток из ОстаткиПоПартииПретензии цикл
				Кол = остаток.Количество;
				Сум = остаток.Сумма;
				Если Кол = 0 Тогда Продолжить КонецЕсли;
				СписатьКол = Мин(Кол, КолП);                                                                            
				Если СписатьКол = Кол Тогда
					СписатьСумму = остаток.Сумма;
				Иначе                                            
					СписатьСумму = СписатьКол*строка.ПартияПретензии.ЗакупочнаяЦена;
				КонецЕсли;
				Движение = Движения.Претензии.ДобавитьРасход();
				Движение.Партия=строка.ПартияПретензии;
				Движение.Претензия=строка.Претензия;
				Движение.Склад=остаток.Склад;  
				Движение.ДокументПретензии=остаток.ДокументПретензии;
				Движение.Количество=СписатьКол; 
				Движение.Сумма=СписатьСумму;
				Движение.Период = Дата;
				КолП = КолП-СписатьКол;  
				Если КолП=0 Тогда 
					Прервать 
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;		
	КонецЦикла;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьЗакупкуТоваров") Тогда

		Если ТипНакладной = Перечисления.ТипыПрихНакл.Закупка И БезЗаказа = Ложь И ВычНП = Истина Тогда

			Движения.Дефектура.Очистить();
			Движения.Дефектура.Записывать = Истина;
			Движения.Дефектура.Записать(Истина);
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ДатаДоставки", Дата);
			Запрос.УстановитьПараметр("Поставщик", Клиент);
			Запрос.УстановитьПараметр("Склад", Отдел);
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПриходнаяТовары.Товар КАК Товар,
			|	СУММА(ПриходнаяТовары.Количество) КАК Количество
			|ПОМЕСТИТЬ ВТ_Приходная
			|ИЗ
			|	Документ.Приходная.Товары КАК ПриходнаяТовары
			|ГДЕ
			|	ПриходнаяТовары.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ПриходнаяТовары.Товар
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Товар
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДефектураОстатки.Склад,
			|	ДефектураОстатки.Товар,
			|	ДефектураОстатки.Заказ,
			|	ДефектураОстатки.КлючСвязи,
			|	ДефектураОстатки.Поставщик,
			|	ДефектураОстатки.ДатаДоставки,
			|	ДефектураОстатки.ЦенаЗакупки,
			|	ДефектураОстатки.СрокГодности,
			|	ДефектураОстатки.КоличествоОстаток КАК ОстатокДефектуры,
			|	ВТ_Приходная.Количество КАК КоличествоПрихода
			|ПОМЕСТИТЬ ВТ_Дефектура
			|ИЗ
			|	ВТ_Приходная КАК ВТ_Приходная
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Дефектура.Остатки(
			|				,
			|				Поставщик = &Поставщик
			|					И Склад = &Склад
//			|					И ДатаДоставки <= &ДатаДоставки
			|					И Товар В
			|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|							ВТ_Приходная.Товар КАК Товар
			|						ИЗ
			|							ВТ_Приходная КАК ВТ_Приходная)) КАК ДефектураОстатки
			|		ПО ВТ_Приходная.Товар = ДефектураОстатки.Товар
			|ГДЕ
			|	ДефектураОстатки.КоличествоОстаток > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Дефектура.Склад,
			|	ВТ_Дефектура.Товар КАК Товар,
			|	ВТ_Дефектура.Заказ,
			|	ВТ_Дефектура.КлючСвязи,
			|	ВТ_Дефектура.Поставщик,
			|	ВТ_Дефектура.ДатаДоставки КАК ДатаДоставки,
			|	ВТ_Дефектура.ЦенаЗакупки,
			|	ВТ_Дефектура.СрокГодности,
			|	ВТ_Дефектура.ОстатокДефектуры,
			|	ВТ_Дефектура.КоличествоПрихода КАК КоличествоПрихода
			|ИЗ
			|	ВТ_Дефектура КАК ВТ_Дефектура
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаДоставки
			|ИТОГИ
			|	СУММА(КоличествоПрихода)
			|ПО
			|	Товар";
			
			ВыборкаТовар = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаТовар.Следующий() Цикл
				
				слкТовар = ВыборкаТовар.Товар;
				ОсталосьРаспределить = ВыборкаТовар.КоличествоПрихода;
				
				ВыборкаДетальныеЗаписи = ВыборкаТовар.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					Движение			= Движения.Дефектура.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период		= Дата;
					Движение.Склад		= ВыборкаДетальныеЗаписи.Склад;
					Движение.Товар		= ВыборкаДетальныеЗаписи.Товар;
					Движение.Заказ		= ВыборкаДетальныеЗаписи.Заказ;
					Движение.КлючСвязи	= ВыборкаДетальныеЗаписи.КлючСвязи;
					Движение.Поставщик	= ВыборкаДетальныеЗаписи.Поставщик;
					Движение.ДатаДоставки = ВыборкаДетальныеЗаписи.ДатаДоставки;
					Движение.Количество	= Мин(ОсталосьРаспределить, ВыборкаДетальныеЗаписи.ОстатокДефектуры);
					
					ОсталосьРаспределить = ОсталосьРаспределить - Движение.Количество;
					Если ОсталосьРаспределить = 0 Тогда
						Прервать;
					КонецЕсли; 
					
				КонецЦикла;
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
		
	Если не ПометкаУдаления и Проведен и не ДополнительныеСвойства.Свойство("ЭтоОбмен") тогда
		Если (РазрешенаПриемка или Клиент = ПредопределенноеЗначение("Справочник.Контрагенты.Склад")) и не ОбменАлгоритмыРИБД.ЭтоЦентральнаяБаза() Тогда
			СоздатьЦеныПартии(Отказ);
		КонецЕсли;
		Если ВычНП и не ДополнительныеСвойства.Свойство("ЭтоОбмен") тогда
			Документы.Приходная.СоздатьПретензии(Ссылка);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЦеныПартии(Отказ) Экспорт	
	
	Если РазрешенаПриемка тогда
		СтрокиСПустойПартией = Товары.НайтиСтроки(Новый Структура("Партия",Справочники.Партии.ПустаяСсылка()));
		Если СтрокиСПустойПартией.Количество() <> 0 тогда
			Сообщить("Не везде есть партии");
			Отказ = истина;
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;

	//Если ОрдернаяСхема = 1 и ТипНакладной <> перечисления.ТипыПрихНакл.ВводОстатков тогда
		ТаблицаНастроек = ОбщиеФункцииСервер.ПолучитьНастройкиСозданияЦенПартии(Отдел,Дата);
		Для каждого Строка из Товары цикл
			Для каждого Настройка из ТаблицаНастроек цикл
				Если Не ЗначениеЗаполнено(Строка.Партия) тогда
					Продолжить;
				КонецЕсли;
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЦеныПартии.Ссылка
				|ИЗ
				|	Справочник.ЦеныПартии КАК ЦеныПартии
				|ГДЕ
				|	ЦеныПартии.Владелец = &Владелец
				|	И ЦеныПартии.ТипЦены = &ТипЦены
				|	И ЦеныПартии.РегионРаботы = &РегионРаботы";
				Запрос.УстановитьПараметр("ТипЦены",Настройка.ТипЦены);
				Запрос.УстановитьПараметр("РегионРаботы",Настройка.РегионРаботы);
				Запрос.УстановитьПараметр("Владелец",Строка.Партия);
				Выборка = Запрос.Выполнить().Выбрать();
				ЦенаПартии = Справочники.ЦеныПартии.ПустаяСсылка();
				Пока Выборка.Следующий() цикл
					ЦенаПартии = Выборка.Ссылка;
				КонецЦикла;
				//ЦеныПартии = Справочники.ЦеныПартии.НайтиПоРеквизиту("ТипЦены",Настройка.ТипЦены,,Строка.Партия);
				Если не ЗначениеЗаполнено(ЦенаПартии) тогда
					ЦПП=ОбщиеФункцииСервер.ЦенаПоследнейПартии(Строка.Товар,Настройка.ТипЦены,Настройка.РегионРаботы);
					ЦеныПартии = Справочники.ЦеныПартии.СоздатьЭлемент();
					ЗаполнитьЗначенияСвойств(ЦеныПартии,Настройка);
					ЦеныПартии.Владелец = Строка.Партия;
					ВычЦенаПартии = ОбщиеФункцииСервер.РасчетЦеныПартии(Настройка.ТипЦены, Строка.Товар,Дата,Строка.Цена,ЦПП,Строка.РеестроваяЦена,Строка.ЦенаПроизводителя,Строка.Партия.СтавкаНДС.Ставка,Клиент,Настройка.РегионРаботы);
					Если ВычЦенаПартии < Строка.Цена тогда
						Если Строка.РеестроваяЦена>0 тогда
							ВычЦенаПартии = Строка.Цена;
						Иначе
							Если ВычЦенаПартии<>0.01 тогда
								ВычЦенаПартии = цел(Строка.Цена*1.04)+1;
							КонецЕсли;
						КонецЕсли;		
					КонецЕсли;
					ЦеныПартии.Цена = ВычЦенаПартии;
					ЦеныПартии.Записать();
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	//КонецЕсли;
	Возврат;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Инвентаризация") Тогда
		Товары.Очистить();
		Если не ЗначениеЗаполнено(Дата) тогда
			Дата =  ДанныеЗаполнения.Дата;
		КонецЕсли;
		Отдел = ДанныеЗаполнения.Склад;
		Фирма = ДанныеЗаполнения.Склад.АдресХранения.Фирма;
		Клиент = Справочники.Контрагенты.Склад;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Для каждого Строка из ДанныеЗаполнения.ПриходПоТоварам цикл
			Стр = Товары.Добавить();	
			ЗаполнитьЗначенияСвойств(Стр,Строка);
			СтруктураСтроки = Новый Структура("Количество,Сумма,Цена,Недовоз,Перевоз,Брак");
			ЗаполнитьЗначенияСвойств(СтруктураСтроки,Стр);
			ОбщиеФункцииСервер.РасчитатьСтрокуТЗТоварыСервер(СтруктураСтроки,РасчетОтСуммы);
			ЗаполнитьЗначенияСвойств(Стр,СтруктураСтроки);
			Если Упрощенка или не ЗначениеЗаполнено(Строка.СтавкаНДС)  тогда
				ПроцентНДС = 0;
			Иначе
				ПроцентНДС = Строка.СтавкаНДС.Ставка;
			КонецЕсли;
			Стр.СуммаНДС = Стр.Цена*Стр.Количество*ПроцентНДС/(100+ПроцентНДС); 
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры

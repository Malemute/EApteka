
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ОстаткиТовара.Очистить();
	Движения.ОстаткиТовара.Записывать = Истина;
	
	Движения.Реализация.Очистить();
	Движения.Реализация.Записывать = Истина;
	
	Движения.КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯ.Очистить();
	Движения.КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯ.Записывать = Истина;
	
	Движения.ХранениеЗСЯ.Очистить();
	Движения.ХранениеЗСЯ.Записывать = Истина;
	
	Движения.ХранениеЗСЯПоТоварам.Очистить();
	Движения.ХранениеЗСЯПоТоварам.Записывать = Истина;
	
	Движения.ДенежныеСредстваККМ.Очистить();
	Движения.ДенежныеСредстваККМ.Записывать = Истина;
	
	Движения.ТабПродажиАстраЗенека.Очистить();
	Движения.ТабПродажиАстраЗенека.Записывать = Истина;
	
	Движения.t_astro_used_booklets.Очистить();
	Движения.t_astro_used_booklets.Записывать = Истина;
	
	ТаблицаДокументов = Реализация.Выгрузить(,"Документ,ТипКомплектацииЗаказа,ЗСЯ"); 
	ТаблицаДокументов.Свернуть("Документ,ТипКомплектацииЗаказа,ЗСЯ");
		
	ТаблицаЗаказовСборкаВАптеке = ТаблицаДокументов.Скопировать(Новый Структура("ТипКомплектацииЗаказа",Перечисления.ТипКомплектацииЗаказа.СборкаИКомплектацияВАптеке),"Документ,ЗСЯ");
	МассивЗаказовСборкаВАптеке = ТаблицаЗаказовСборкаВАптеке.ВыгрузитьКолонку("Документ");
		
	ТаблицаЗаказовКомплектацияИзКоробки = ТаблицаДокументов.Скопировать(Новый Структура("ТипКомплектацииЗаказа",Перечисления.ТипКомплектацииЗаказа.СборкаНаСкладеВКоробку_КомплектацияВАптеке),"Документ,ЗСЯ");
	МассивЗаказовКомплектацияИзКоробки = ТаблицаЗаказовКомплектацияИзКоробки.ВыгрузитьКолонку("Документ");
			
	ЭтоВозврат = Ложь;
	Если ВидОперации = перечисления.ТорговыеОперации.Продажа тогда
		Коэф = 1;
	Иначе
		Коэф = -1;
		ЭтоВозврат = Истина;
	КонецЕсли;
	
	Для каждого строка из Реализация цикл
		
		ДокументЗаполнен = ЗначениеЗаполнено(Строка.Документ);
		РеализацияПоЗаказу = ТипЗнч(Строка.Документ) = Тип("ДокументСсылка.Заказ") и ДокументЗаполнен;		
		СборкаЗаказаВАптеке = МассивЗаказовСборкаВАптеке.Найти(строка.Документ) <> неопределено и РеализацияПоЗаказу;
		СборкаЗаказаНаСкладеВКоробку = МассивЗаказовКомплектацияИзКоробки.Найти(строка.Документ) <> неопределено и РеализацияПоЗаказу;
		
		Движение = Движения.Реализация.Добавить();
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.ДатаПродажи = Дата;
		Движение.Товар =  Строка.Товар;
		Движение.ККМ = ККМ;
		Движение.Отдел = Отдел;
		Движение.Партия = Строка.Партия;
		Движение.ТипОплаты = ТипОплаты;
		Движение.ДокументПродажи = Строка.Документ;
		Движение.Количество = (Коэф)*Строка.Количество;
		Движение.Скидка = (Коэф)*Строка.Скидка;
		Движение.Сумма = (Коэф)*Строка.Сумма;
		Движение.Себестоимость = (Коэф)*Строка.Себестоимость;
		Движение.СтавкаНДС = Строка.СтавкаНДС;
		Движение.СуммаНДС = Строка.СуммаНДС;
		Движение.Операция = ВидОперации;
		Движение.ТипЦены = Строка.ТипЦены;
		Движение.Всего = (Коэф)*Строка.Всего;
		
		Если Строка.Товар.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга тогда
			Продолжить;
		КонецЕсли;
		
		Если не РеализацияПоЗаказу тогда
			Движение = Движения.ОстаткиТовара.Добавить();
			Движение.ТипОперации = Перечисления.ТипыОпераций.РеализацияККМ;
			Движение.Период = Дата;
			Движение.Товар = Строка.Товар;
			Движение.Отдел = Отдел;
			Движение.Партия = Строка.Партия;
			Движение.Остаток = Строка.Количество;			
			Если ЭтоВозврат тогда
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Иначе
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			КонецЕсли;
		ИначеЕсли СборкаЗаказаВАптеке или СборкаЗаказаНаСкладеВКоробку тогда
			Если ЭтоВозврат тогда	
				Движение = Движения.ОстаткиТовара.ДобавитьПриход();
				Движение.ТипОперации = Перечисления.ТипыОпераций.ВозвратПокупателя;
				Движение.Период = Дата;
				Движение.Товар = Строка.Товар;
				Движение.Отдел = Отдел;
				Движение.Партия = Строка.Партия;
				Движение.Остаток = Строка.Количество;
			КонецЕсли;
		КонецЕсли;
		
		Если РеализацияПоЗаказу и (СборкаЗаказаВАптеке или СборкаЗаказаНаСкладеВКоробку) и НЕ ЭтоВозврат тогда			
			Движение = Движения.ХранениеЗСЯПоТоварам.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.Склад = Отдел;
			Движение.Документ = Строка.Документ;
			Движение.Товар = Строка.Товар;
			Движение.Партия = Строка.Партия;
			Движение.ЗСЯ = Строка.ЗСЯ;
			Движение.Количество = Строка.Количество;			
		КонецЕсли;
		
	КонецЦикла;
		
	Если НЕ ЭтоВозврат тогда
		
		Для каждого строка из СписаниеПакетов цикл
			ДвижениеЗСЯ = Движения.ХранениеЗСЯ.ДобавитьРасход();	
			ДвижениеЗСЯ.Период = Дата;
			ДвижениеЗСЯ.Регистратор = Ссылка;
			ДвижениеЗСЯ.Склад = Отдел;
			ДвижениеЗСЯ.МестоЗаказа = строка.МестоЗаказа;
			ДвижениеЗСЯ.ЗСЯ = строка.ЗСЯ;
			ДвижениеЗСЯ.Документ = строка.Заказ;
			ДвижениеЗСЯ.Количество = строка.Количество;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаЗаказов.ТипКомплектацииЗаказа,
		|	ТаблицаЗаказов.Документ,
		|	ТаблицаЗаказов.ЗСЯ
		|ПОМЕСТИТЬ втТаблицаЗаказов
		|ИЗ
		|	&ТаблицаДокументов КАК ТаблицаЗаказов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТаблицаЗаказов.Документ,
		|	втТаблицаЗаказов.ЗСЯ
		|ПОМЕСТИТЬ втТаблицаЗаказовДляСписания
		|ИЗ
		|	втТаблицаЗаказов КАК втТаблицаЗаказов
		|ГДЕ
		|	втТаблицаЗаказов.ТипКомплектацииЗаказа <> ЗНАЧЕНИЕ(Перечисление.ТипКомплектацииЗаказа.СборкаНаСкладеВПакеты_РаскладкаПакетовВАптеке)
		|	И втТаблицаЗаказов.ЗСЯ <> ЗНАЧЕНИЕ(Справочник.МестоЗСЯ.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯСрезПоследних.ЗСЯ,
		|	КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯСрезПоследних.Заказ
		|ИЗ
		|	РегистрСведений.КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯ.СрезПоследних(
		|			&Граница,
		|			ЗСЯ В
		|				(ВЫБРАТЬ
		|					втТаблицаЗаказовДляСписания.ЗСЯ
		|				ИЗ
		|					втТаблицаЗаказовДляСписания КАК втТаблицаЗаказовДляСписания)) КАК КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаЗаказовДляСписания КАК втТаблицаЗаказовДляСписания
		|		ПО КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯСрезПоследних.ЗСЯ = втТаблицаЗаказовДляСписания.ЗСЯ
		|			И КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯСрезПоследних.Заказ = втТаблицаЗаказовДляСписания.Документ
		|
		|СГРУППИРОВАТЬ ПО
		|	КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯСрезПоследних.ЗСЯ,
		|	КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯСрезПоследних.Заказ";
		Запрос.УстановитьПараметр("Граница",Новый Граница(МоментВремени(),ВидГраницы.Исключая));
		Запрос.УстановитьПараметр("ТаблицаДокументов",ТаблицаДокументов);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() цикл
			ДвижениеЗСЯ = Движения.КомплектацияЗаказов_РаспределениеЗаказовПоЗСЯ.Добавить();	
			ДвижениеЗСЯ.Период = Дата;
			ДвижениеЗСЯ.Регистратор = Ссылка;
			ДвижениеЗСЯ.ЗСЯ = Выборка.ЗСЯ;
			ДвижениеЗСЯ.Заказ = Документы.Заказ.ПустаяСсылка();		
		КонецЦикла;
		
	Иначе
		ОбщиеФункцииСервер.СоздатьЦеныПартии(Отдел,Дата,Реализация.ВыгрузитьКолонку("Партия"));
	КонецЕсли;
	
	Если ТипОплаты = Перечисления.ТипОплаты.Наличные Тогда
		Движение = Движения.ДенежныеСредстваККМ.Добавить();
		Движение.Период = Дата;
		Движение.КассаККМ = ККМ;
		Движение.Сумма = СуммаДокумента;
		Если ЭтоВозврат Тогда
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Иначе
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		КонецЕсли; 
	КонецЕсли;
	
	Для Каждого строка из ТаблицаСкидочныеПрограммы цикл
		Движение = Движения.ТабПродажиАстраЗенека.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,Строка);
		Движение.Период = Дата;
		Движение.Действует = НЕ ЭтоВозврат;
	КонецЦикла;
	
	Для Каждого строка из ИспользованныеБуклеты цикл
		Движение = Движения.t_astro_used_booklets.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,Строка);
		Движение.Период = Дата;
		Движение.Действует = НЕ ЭтоВозврат;
	КонецЦикла;

	
	//ТаблицаДокументов = Реализация.Выгрузить(,"Документ");
	ТаблицаДокументов.Свернуть("Документ");
	Для каждого строка из ТаблицаДокументов цикл
		Если ЗначениеЗаполнено(Строка.Документ) и ТипЗнч(Строка.Документ) = Тип("ДокументСсылка.Заказ") тогда
			Статус = неопределено;
			Если ЭтоВозврат тогда
				Статус = Справочники.СтатусыОбработкиЗаказа.Пробит;
			Иначе
				Статус = Справочники.СтатусыОбработкиЗаказа.Пробит;
			КонецЕсли;
			СтатусыДокументов.УстановитьСтатусСборкиЗаказа(Строка.Документ,Ссылка,Статус,ПараметрыСеанса.ТекущийПользователь,Дата);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьТЧСписаниеПакетов() Экспорт
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.ТорговыеОперации.Продажа") тогда
		СписаниеПакетов.Очистить();
		
		МассивЗаказов = Реализация.ВыгрузитьКолонку("Документ");	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХранениеЗСЯОстатки.Документ как Заказ,
		|	ХранениеЗСЯОстатки.МестоЗаказа,
		|	ХранениеЗСЯОстатки.ЗСЯ,
		|	СУММА(ХранениеЗСЯОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	РегистрНакопления.ХранениеЗСЯ.Остатки(
		|			&Граница,
		|			ВЫРАЗИТЬ(Документ КАК Документ.Заказ) В (&МассивЗаказов)
		|				И Склад = &Склад
		|				И ЕСТЬNULL(ВЫРАЗИТЬ(Документ КАК Документ.Заказ).ТипКомплектацииЗаказа, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипКомплектацииЗаказа.СборкаНаСкладеВПакеты_РаскладкаПакетовВАптеке)) КАК ХранениеЗСЯОстатки
		|ГДЕ
		|	ХранениеЗСЯОстатки.МестоЗаказа <> ЗНАЧЕНИЕ(Справочник.НаклейкиМестЗаказа.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ХранениеЗСЯОстатки.Документ,
		|	ХранениеЗСЯОстатки.МестоЗаказа,
		|	ХранениеЗСЯОстатки.ЗСЯ";
		Запрос.УстановитьПараметр("МассивЗаказов",МассивЗаказов);
		Запрос.УстановитьПараметр("Склад",Отдел);
		Запрос.УстановитьПараметр("Граница",Новый Граница(МоментВремени(),ВидГраницы.Исключая));
		Результат = Запрос.Выполнить();
		Если не Результат.Пустой() тогда
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() цикл
				ЗаполнитьЗначенияСвойств(СписаниеПакетов.Добавить(),Выборка);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;                                                                                	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	СуммаДокумента = Реализация.Итог("Всего");
	
КонецПроцедуры


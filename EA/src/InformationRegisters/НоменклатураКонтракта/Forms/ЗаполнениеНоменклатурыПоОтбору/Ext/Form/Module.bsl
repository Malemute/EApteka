
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьКомпоновщикНастроек();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не установлен отбор номенклатуры.'"));
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("АдресТоваровВХранилище", ПоместитьТоварыВХранилище());
	
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьКомпоновщикНастроек()
	
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(ПолучитьОбщийМакет("ОтборНоменклатуры"), Новый УникальныйИдентификатор);
	
	СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных);
	
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КомпоновщикНастроек.Восстановить();
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТоварыВХранилище()
	
	КомпоновщикНастроек.Восстановить();
	
	Схема = ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных);

	КомпоновкаДанныхКлиентСервер.ОчиститьНастройкиКомпоновкиДанных(Схема.НастройкиПоУмолчанию);
	КомпоновкаДанныхКлиентСервер.СкопироватьНастройкиКомпоновкиДанных(Схема.НастройкиПоУмолчанию, КомпоновщикНастроек.ПолучитьНастройки());
	
	Если НЕ Схема.НастройкиПоУмолчанию.НаличиеОтбораУЭлемента(Схема.НастройкиПоУмолчанию) Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Схема.НастройкиПоУмолчанию,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТаблицаДанных = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ТаблицаДанных.Колонки.Добавить("УчитыватьНаличие", Новый ОписаниеТипов("Булево"));
	ТаблицаДанных.Колонки.Добавить("МинимальныйЗапас", ПолучитьОписаниеТиповЧисла(15, 3));
	
	ТаблицаДанных.ЗаполнитьЗначения(УчитыватьНаличие, "УчитыватьНаличие");
	ТаблицаДанных.ЗаполнитьЗначения(МинимальныйЗапас, "МинимальныйЗапас");
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаДанных);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОписаниеТиповЧисла(Разрядность, РазрядностьДробнойЧасти, Неотрицательный = Ложь)
	
	Если Неотрицательный Тогда
		Знак = ДопустимыйЗнак.Неотрицательный;
	Иначе
		Знак = ДопустимыйЗнак.Любой;
	КонецЕсли;
	
	Возврат Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(Разрядность, РазрядностьДробнойЧасти, Знак));

КонецФункции

#КонецОбласти

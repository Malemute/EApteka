
Функция PutMessage(NamePlane, CodeHub, StructMessage)
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить( "БылиОшибки", Ложь );
	СтруктураРезультата.Вставить( "ТекстОписанияОшибки", "" );
	
	УзелИнформационнойБазы = ОбменДаннымиСервер.ПолучитьСсылкуУзлаПоИмениПланаОбменаИКоду( NamePlane, CodeHub );
	
	Если УзелИнформационнойБазы = Неопределено Тогда
		
		СтруктураРезультата.БылиОшибки = Истина;
		СтруктураРезультата.ТекстОписанияОшибки = "Не найден узел по коду """ + CodeHub + """ в плане обмена """ + NamePlane + """";
		
		Возврат ОбщегоНазначения.Сериализовать( СтруктураРезультата ); 
		
	КонецЕсли;
	
	ПолноеИмяРегистраПолученныхСообщений = Метаданные.РегистрыСведений.ПолученныеСообщенияОбменовДанными.ПолноеИмя();
	
	Попытка
		
		СтруктураСообщения = ОбщегоНазначения.Десериализовать( StructMessage );
		
		СтруктураНовойЗаписи = ОбщегоНазначения.СформироватьСтруктуруЗаписиРегистра( ПолноеИмяРегистраПолученныхСообщений );
		ЗаполнитьЗначенияСвойств( СтруктураНовойЗаписи, СтруктураСообщения, "ВнеОчередиСообщений, НомерСообщения, ОбновитьНомерВУзлеПослеЗагрузки, НомерПоследнегоСообщенияПринятогоУзлом, ИмяФайлаСообщения, ХранилищеСообщения" );
		СтруктураНовойЗаписи.УзелИнформационнойБазы = УзелИнформационнойБазы;
		СтруктураНовойЗаписи.ДатаПолучения = ТекущаяДата();
		СтруктураНовойЗаписи.ВидТранспортаОбмена = ПредопределенноеЗначение( "Перечисление.ВидыТранспортаСообщенийОбмена.WS" );
		СтруктураНовойЗаписи.СообщенияРезультата = Строка( ТекущаяДата() ) + " - Получено через Web-сервис ExchangeFromUniversalXML (операция PutMessage)." + Символы.ПС;
		
		СтруктураОтбора = Новый Структура;
		врНаборЗаписей = РегистрыСведений.ПолученныеСообщенияОбменовДанными.СоздатьНаборЗаписей();
		Для Каждого Отбор Из врНаборЗаписей.Отбор Цикл
			СтруктураОтбора.Вставить( Отбор.Имя );
		КонецЦикла;
		
		// запись необходимо добавить не затирая существующие
		// потому будем проверять наличие записей с отсечкой по времени
		ЗаполнитьЗначенияСвойств( СтруктураОтбора, СтруктураНовойЗаписи );
		Пока Истина Цикл
			
			СтруктураОтбора.Период = ТекущаяДата();
			Если Не ОбщегоНазначения.РегистрСодержитЗаписи( СтруктураОтбора, ПолноеИмяРегистраПолученныхСообщений ) Тогда
				Прервать;
			КонецЕсли;
			
			// если записи есть, то подождем следующей секунды
			Пока СтруктураОтбора.Период >= ТекущаяДата() Цикл
				;
			КонецЦикла;
			
		КонецЦикла;
		
		СтруктураНовойЗаписи.Период = СтруктураОтбора.Период;
		РегистрыСведений.ПолученныеСообщенияОбменовДанными.ОбновитьДобавитьЗапись( СтруктураНовойЗаписи );
		
	Исключение
		
		СтруктураРезультата.БылиОшибки = Истина;
		СтруктураРезультата.ТекстОписанияОшибки = "Ошибка при сохранении сообщения для узла с кодом """ + CodeHub + """ в плане обмена """ + NamePlane + """,
			|по причине: " + ОписаниеОшибки();
		
		Попытка
			ОтменитьТранзакцию();
		Исключение
		КонецПопытки;
		
	КонецПопытки;
	
	Возврат ОбщегоНазначения.Сериализовать( СтруктураРезультата );
	
КонецФункции

Функция GetNextMessage(NamePlane, CodeHub)
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить( "БылиОшибки", Ложь );
	СтруктураРезультата.Вставить( "ТекстОписанияОшибки", "" );
	СтруктураРезультата.Вставить( "СтруктураСообщения" );
	
	УзелИнформационнойБазы = ОбменДаннымиСервер.ПолучитьСсылкуУзлаПоИмениПланаОбменаИКоду( NamePlane, CodeHub );
	
	Если УзелИнформационнойБазы = Неопределено Тогда
		
		СтруктураРезультата.БылиОшибки = Истина;
		СтруктураРезультата.ТекстОписанияОшибки = "Не найден узел по коду """ + CodeHub + """ в плане обмена """ + NamePlane + """";
		
		Возврат ОбщегоНазначения.Сериализовать( СтруктураРезультата ); 
		
	КонецЕсли;
	
	Попытка
		
		НачатьТранзакцию();
		
		СтруктураСообщенияИзРегистра = РегистрыСведений.СформированныеСообщенияОбменовДанными.ПолучитьСледующееСообщениеДляВыгрузки( УзелИнформационнойБазы );
		
		Если СтруктураСообщенияИзРегистра <> Неопределено Тогда
			
			СтруктураСообщенияИзРегистра.ВидТранспортаОбмена = ПредопределенноеЗначение( "Перечисление.ВидыТранспортаСообщенийОбмена.WS" );
			СтруктураСообщенияИзРегистра.СообщенияРезультата = Строка( СтруктураСообщенияИзРегистра.СообщенияРезультата ) + Символы.ПС + Строка( ТекущаяДата() ) + " - выгружено по внешнему запросу через веб-сервис";
			
			ОбменДаннымиСервер.ОтметитьСообщениеДляВыгрузкиКакВыгруженное( СтруктураСообщенияИзРегистра );
			
			СтруктураРезультата.СтруктураСообщения = Новый Структура( "ВнеОчередиСообщений, НомерСообщения, ОбновитьНомерВУзлеПослеЗагрузки, НомерПоследнегоСообщенияПринятогоУзлом, ИмяФайлаСообщения, ХранилищеСообщения" );
			ЗаполнитьЗначенияСвойств( СтруктураРезультата.СтруктураСообщения, СтруктураСообщенияИзРегистра );
		
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		СтруктураРезультата.БылиОшибки = Истина;
		СтруктураРезультата.ТекстОписанияОшибки = "Ошибка при получении сообщения от узла с кодом """ + CodeHub + """ в плане обмена """ + NamePlane + """,
			|по причине: " + ОписаниеОшибки();
		
		Попытка
			ОтменитьТранзакцию();
		Исключение
		КонецПопытки;
		
	КонецПопытки;
	
	Возврат ОбщегоНазначения.Сериализовать( СтруктураРезультата );
	
КонецФункции

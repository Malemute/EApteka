
Процедура ПередЗаписью(Отказ)
	
	Если ЭтотОбъект.ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда 
		Возврат; 
	КонецЕсли;
	
	// устанавливается родитель по умолчанию
	РодительСсылка = Справочники.ВидыОбъектовМ.НайтиПоНаименованию(Строка(ЭтотОбъект.ТипОбъекта));
	Если РодительСсылка.Пустая() Тогда
		ОбъектРодитель = Справочники.ВидыОбъектовМ.СоздатьГруппу();
		ОбъектРодитель.Наименование = Строка(ЭтотОбъект.ТипОбъекта);
		ОбъектРодитель.Записать();
		ЭтотОбъект.Родитель = ОбъектРодитель.Ссылка;
	Иначе
		ЭтотОбъект.Родитель = РодительСсылка;
	КонецЕсли;
	
	// проверяем ПометкуУдаления, ее нельзя устанавливать
	// если обнаруживается установка пометки удаления, то сбрасываем ее
	Если ЭтотОбъект.ПометкаУдаления = Истина Тогда
		
		Если Не ЭтоНовый() И Ссылка.ПометкаУдаления = Ложь Тогда
			
			ЭтотОбъект.ПометкаУдаления = Ложь;
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.УстановитьДанные( ЭтотОбъект );
			СообщениеПользователю.Текст = "Помечать на удаление Виды Объектов нельзя.";
			СообщениеПользователю.Сообщить();
			
		КонецЕсли;
		
	КонецЕсли;
	
	// установим значение доп. реквизитов
	Если ЗначениеЗаполнено( ТипОбъекта ) Тогда
		
		ПолноеИмяМетаданных = Перечисления.ТипыОбъектовМ.ПолучитьКоллекциюМетаданныхПоТипуОбъектаМ( ТипОбъекта )[ Идентификатор ].ПолноеИмя();
		
		Попытка
			ПустаяСсылка = Перечисления.ТипыОбъектовМ.ПолучитьМенеджерКоллекциПоТипуОбъектаМ( ТипОбъекта )[ Идентификатор ].ПустаяСсылка();
		Исключение
			ПустаяСсылка = Неопределено;
		КонецПопытки;
		
	Иначе
		ПолноеИмяМетаданных = Неопределено;
		ПустаяСсылка = Неопределено;
	КонецЕсли;
	
	
	// проверим объект на дублирование, дубли не допустимы
	// помеченные на удаление не проверяем
	Если ЭтотОбъект.ПометкаУдаления = Ложь И ЗначениеЗаполнено( ТипОбъекта ) Тогда
		
		Если ПустаяСсылка = Неопределено Тогда
			Выборка = Справочники.ВидыОбъектовМ.ПолучитьВыборкуВидовОбъектовМПоПолномуИмениМетаданных( ПолноеИмяМетаданных );
		Иначе
			Выборка = Справочники.ВидыОбъектовМ.ПолучитьВыборкуВидовОбъектовМПоПустойСсылке( ПустаяСсылка );
		КонецЕсли;
		
		// проверка на дублирование
		Пока Выборка.Следующий() Цикл
			
			Если ЭтотОбъект.Ссылка = Выборка.Ссылка Тогда
				Продолжить;
			КонецЕсли;
			
			// объект дублируется - это не допустимо
			Отказ = Истина;
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.УстановитьДанные( ЭтотОбъект );
			СообщениеПользователю.Текст = "Объект такого Вида уже зарегистрирован в базе (" + Выборка.Ссылка + "). Дублирование Видов Объектов недопустимо.";
			СообщениеПользователю.Сообщить();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры



&НаСервере
Процедура ЗаполнитьНаСервере()
	
	т_Документ = РеквизитФормыВЗначение("Объект");
	т_Документ.ЗаполнитьНаСервере();
	ЗначениеВРеквизитФормы(т_Документ, "Объект");

	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("Дата", Объект.Дата);
	//Запрос.УстановитьПараметр("Склад", Объект.Склад);
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ДефектураОстатки.Товар КАК Товар,
	//	|	СУММА(ДефектураОстатки.КоличествоОстаток) КАК Количество
	//	|ИЗ
	//	|	РегистрНакопления.Дефектура.Остатки(
	//	|			&Дата,
	//	|			Склад = &Склад
	//	|				И Заказ = ЗНАЧЕНИЕ(Документ.Заказ.ПустаяСсылка)
	//	|				И Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК ДефектураОстатки
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ДефектураОстатки.Товар";
	//	
	//Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)

	Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда

		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен склад";
		Сообщение.Поле = "Склад";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.Сообщить();
		Возврат;

	КонецЕсли; 
	ЗаполнитьНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ТипЗаявкиПриИзменении(Элемент)

	Объект.Товары.Очистить();
	ПриОткрытии(Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)

	Объект.Товары.Очистить();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если Объект.ТипЗаявки = ПредопределенноеЗначение("Перечисление.ТипыЗаявокНаДефектуру.АннулированиеПотребности") Тогда
		Элементы.ТоварыЗаполнить.Доступность = Истина;
	Иначе
		Элементы.ТоварыЗаполнить.Доступность = Ложь;
	КонецЕсли; 

КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	АдресХраненияТекущейБазы = Константы.АдресХраненияТекущейБазы.Получить();
	
	Движения.ОстаткиТовара.БлокироватьДляИзменения = Истина;
	Движения.ОстаткиТовара.Очистить();
	Движения.ОстаткиТовара.Записывать = Истина;
	
	Движения.Претензии.Очистить(); 
	Движения.Претензии.Записывать = Истина;
	
	Движения.ТоварыКСборке.Очистить(); 
	Движения.ТоварыКСборке.Записывать = Истина;
	
	
	ЗапросПретензии = Новый Запрос;
	ЗапросПретензии.Текст = 
	"ВЫБРАТЬ
	|	Перемещение.Партия,
	|	Перемещение.Претензия,
	|	Перемещение.Ссылка.Поставщик как Отдел
	|ПОМЕСТИТЬ втПретензииБезПустых
	|ИЗ
	|	Документ.Перемещение.Товары КАК Перемещение
	|ГДЕ
	|	Перемещение.Ссылка = &Ссылка
	|	И Перемещение.Партия <> ЗНАЧЕНИЕ(Справочник.Партии.ПустаяСсылка)
	|	И Перемещение.Претензия <> ЗНАЧЕНИЕ(Справочник.Претензии.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПретензииОстатки.Склад,
	|	ПретензииОстатки.Партия КАК ПартияПретензии,
	|	ПретензииОстатки.Претензия,
	|	ПретензииОстатки.ДокументПретензии,
	|	ПретензииОстатки.СуммаОстаток КАК Сумма,
	|	ПретензииОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.Претензии.Остатки(
	|			&Дата,
	|			(Партия, Претензия, Склад) В
	|				(ВЫБРАТЬ
	|					втПретензииБезПустых.Партия,
	|					втПретензииБезПустых.Претензия,
	|					втПретензииБезПустых.Отдел
	|				ИЗ
	|					втПретензииБезПустых КАК втПретензииБезПустых)) КАК ПретензииОстатки";
	ЗапросПретензии.УстановитьПараметр("Ссылка",Ссылка);
	ЗапросПретензии.УстановитьПараметр("Дата",Новый Граница(МоментВремени(),ВидГраницы.Включая));
	
	ТЗОстатковПретензий = ЗапросПретензии.Выполнить().Выгрузить();
	
	Для каждого строка из Товары цикл
		Если ВводЗавершен тогда
			Если не СборкаНаТСД	и Строка.Количество <> 0 тогда
				Если ПолучитьПризнакФормированияРасходаПоСкладуПоставщику(Поставщик) тогда
					Движение = Движения.ОстаткиТовара.ДобавитьРасход();
					Движение.Период = Дата;
					Движение.Товар = Строка.Товар;
					Движение.Отдел = Поставщик;
					Движение.Партия = Строка.Партия;
					Движение.Остаток = Строка.Количество;
				КонецЕсли;
				Если не ОрдернаяСхема тогда
					Движение = Движения.ОстаткиТовара.ДобавитьПриход();
					Движение.Период = Дата;
					Движение.Товар = Строка.Товар;
					Движение.Отдел = Получатель;
					Движение.Партия = Строка.Партия;
					Движение.Остаток = Строка.Количество;
				КонецЕсли;
				
			ИначеЕсли СборкаНаТСД  Тогда
				Если строка.КоличествоПлан <> 0 тогда
					Движение = Движения.ТоварыКСборке.ДобавитьПриход();
					Движение.Документ = Ссылка;
					Движение.Регистратор = Ссылка;
					Движение.Партия = строка.Партия;
					Движение.Товар = Строка.Товар;
					Движение.Склад = Поставщик;
					Движение.Период = Дата;
					Движение.КоличествоКСборке = Строка.КоличествоПлан;
					Движение.ТипСборки = перечисления.ТипСборки.СборкаПеремещения;
					
					Движение = Движения.ОстаткиТовара.ДобавитьРасход();
					Движение.Период = Дата;
					Движение.Товар = Строка.Товар;
					Движение.Отдел = Поставщик;
					Движение.Партия = Строка.Партия;
					Движение.Остаток = Строка.КоличествоПлан;
					
					Движение = Движения.ОстаткиТовара.ДобавитьПриход();
					Движение.Период = Дата;
					Движение.Товар = Строка.Товар;
					Движение.Отдел = Поставщик;
					Движение.Партия = Строка.Партия;
					Движение.Резерв = Строка.КоличествоПлан;
				КонецЕсли;
				Если СборкаЗавершена и Строка.Количество <> 0 и не ОрдернаяСхема тогда
					Движение = Движения.ОстаткиТовара.ДобавитьПриход();
					Движение.Период = Дата;
					Движение.Товар = Строка.Товар;
					Движение.Отдел = Получатель;
					Движение.Партия = Строка.Партия;
					Движение.Остаток = Строка.Количество;				
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Поставщик = АдресХраненияТекущейБазы.СкладВозвратов или Поставщик = АдресХраненияТекущейБазы.СкладПретензий тогда
			
			ОстаткиПоПартииПретензии = ТЗОстатковПретензий.Скопировать(Новый Структура("ПартияПретензии,Претензия",Строка.Партия,Строка.Претензия));		
			КолП = Строка.Количество;
			Для каждого остаток из ОстаткиПоПартииПретензии цикл
				Кол = остаток.Количество;
				Сум = остаток.Сумма;
				Если Кол = 0 Тогда Продолжить КонецЕсли;
				СписатьКол = Мин(Кол, КолП);   
				Если СписатьКол = Кол Тогда
					СписатьСумму = остаток.Сумма;
				Иначе                                            
					СписатьСумму = СписатьКол*строка.Партия.ЗакупочнаяЦена;
				КонецЕсли;
				Движение = Движения.Претензии.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Партия=строка.Партия;
				Движение.Претензия=строка.Претензия;
				Движение.Склад=остаток.Склад;  
				Движение.ДокументПретензии=остаток.ДокументПретензии;
				Движение.Количество=СписатьКол; 
				Движение.Сумма=СписатьСумму;
				Движение.Период = Дата;
				КолП = КолП-СписатьКол;  
				Если КолП=0 Тогда 
					Прервать 
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
	КонецЦикла;
	
	Если ВводЗавершен и (не СборкаНаТСД или СборкаНаТСД и СборкаЗавершена) тогда
		ЗапросОстатки = Новый Запрос;
		ЗапросОстатки.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеТовары.Ссылка.Поставщик КАК Отдел,
		|	ПеремещениеТовары.Товар,
		|	ПеремещениеТовары.Партия
		|ПОМЕСТИТЬ СрезОстатков
		|ИЗ
		|	Документ.Перемещение.Товары КАК ПеремещениеТовары
		|ГДЕ
		|	ПеремещениеТовары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиТовараОстатки.Товар,
		|	ОстаткиТовараОстатки.Отдел,
		|	ОстаткиТовараОстатки.Партия,
		|	ОстаткиТовараОстатки.ОстатокОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиТовара.Остатки(
		|			&Дата,
		|			(Отдел, Товар, Партия) В
		|				(ВЫБРАТЬ
		|					СрезОстатков.Отдел,
		|					СрезОстатков.Товар,
		|					СрезОстатков.Партия
		|				ИЗ
		|					СрезОстатков КАК СрезОстатков)) КАК ОстаткиТовараОстатки
		|ГДЕ
		|	ОстаткиТовараОстатки.ОстатокОстаток < 0";
		ЗапросОстатки.УстановитьПараметр("Ссылка",Ссылка);
		ЗапросОстатки.УстановитьПараметр("Дата",Новый Граница(МоментВремени(),ВидГраницы.Включая));
		Результат = ЗапросОстатки.Выполнить();
		Если не Результат.Пустой() тогда
			Отказ = Истина;
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() цикл
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Товара """+Выборка.Товар.Наименование+""" нет на складе "+Поставщик.Наименование+" в необходимом количестве, нужно ещё "+ (-Выборка.ОстатокОстаток);
				Сообщение.Сообщить(); 
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если РазрешитьПродажу и не ДополнительныеСвойства.Свойство("ЭтоОбмен") тогда
		Документы.Приходная.СоздатьПретензии(Ссылка);
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Инвентаризация") Тогда
		Товары.Очистить();
		Если не ЗначениеЗаполнено(Дата) тогда
			Дата =  ДанныеЗаполнения.Дата;
		КонецЕсли;
		Получатель = ДанныеЗаполнения.Склад.АдресХранения.СкладПотерь;;
		Поставщик = ДанныеЗаполнения.Склад;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Для каждого Строка из ДанныеЗаполнения.СписаниеПоПартиям цикл
			Стр = Товары.Добавить();	
			ЗаполнитьЗначенияСвойств(Стр,Строка);
			Стр.Цена = Стр.Партия.ЗакупочнаяЦена;
			Стр.Сумма = Стр.Цена * стр.Количество;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если СборкаНаТСД тогда
		СборкаЗавершена = Ложь;
		Для каждого строка из Товары цикл
			Строка.Количество = 0;
		КонецЦикла;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сборка.Ссылка
		|ИЗ
		|	Документ.Сборка КАК Сборка
		|ГДЕ
		|	Сборка.ДокументОснование = &ДокументОснование";
		Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() цикл
			Об = Выборка.Ссылка.ПолучитьОбъект();
			Об.УстановитьПометкуУдаления(Истина);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПризнакФормированияРасходаПоСкладуПоставщику(Поставщик) Экспорт
	Если ОбменАлгоритмыРИБД.ЭтоЦентральнаяБаза() тогда
		Возврат ПланыОбмена.ПланОбменаОбновлениями.НайтиПоРеквизиту("АдресХранения",Поставщик.АдресХранения).Пустая();
	Иначе
		Возврат Поставщик.АдресХранения = ПараметрыСеанса.ТекущийАдресХранения;
	КонецЕсли;
КонецФункции